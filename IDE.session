Time of storage:
               "Thu Apr 15 08:53:47 Romance Daylight Time 2010"
Layout:        VerticalP (TerminalP {paneGroups = fromList [], paneTabs = Just TopP, currentPage = 4, detachedId = Nothing, detachedSize = Nothing}) (HorizontalP (TerminalP {paneGroups = fromList [("Debug",HorizontalP (HorizontalP (TerminalP {paneGroups = fromList [], paneTabs = Nothing, currentPage = 0, detachedId = Nothing, detachedSize = Nothing}) (TerminalP {paneGroups = fromList [], paneTabs = Just TopP, currentPage = -1, detachedId = Nothing, detachedSize = Nothing}) 174) (TerminalP {paneGroups = fromList [], paneTabs = Just TopP, currentPage = -1, detachedId = Nothing, detachedSize = Nothing}) 180)], paneTabs = Just TopP, currentPage = 1, detachedId = Nothing, detachedSize = Nothing}) (TerminalP {paneGroups = fromList [], paneTabs = Just TopP, currentPage = 0, detachedId = Nothing, detachedSize = Nothing}) 224) 640
Population:    [(Just (BreakpointsSt BreakpointsState),[SplitP RightP,SplitP TopP]),(Just (BufferSt (BufferState "C:\\Users\\magocoal\\Documents\\haskell\\devel\\Workflow-0.5.7\\DocumentApprobalHTML.hs" 7145)),[SplitP LeftP]),(Just (ErrorsSt ErrorsState),[SplitP LeftP]),(Just (BufferSt (BufferState "C:\\Users\\magocoal\\Documents\\haskell\\devel\\Workflow-0.5.7\\Control\\HackMessageFlow.hs" 5898)),[SplitP LeftP]),(Just (BufferSt (BufferState "C:\\Users\\magocoal\\Documents\\haskell\\devel\\TCache-0.6.6\\Data\\TCache\\IDynamic.hs" 6206)),[SplitP LeftP]),(Just (InfoSt (InfoState (Descr {descrName' = "showsPrec", typeInfo' = "Int -> a -> ShowS", descrModu' = PM {pack = PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [4,1,0,0], versionTags = []}}, modu = ModuleName ["GHC","Show"]}, mbLocation' = Nothing, mbComment' = Nothing, details' = MethodDescr {classDescrM = Descr {descrName' = "Show", typeInfo' = "class Show a\n        showsPrec  :: Int -> a -> ShowS\n    show  :: a -> String\n    showList  :: [a] -> ShowS\n", descrModu' = PM {pack = PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [4,1,0,0], versionTags = []}}, modu = ModuleName ["GHC","Show"]}, mbLocation' = Nothing, mbComment' = Nothing, details' = ClassDescr {super = [], methods = [("showsPrec","Int -> a -> ShowS"),("show","a -> String"),("showList","[a] -> ShowS")]}}}}))),[SplitP RightP,SplitP TopP]),(Just (LogSt LogState),[SplitP RightP,SplitP BottomP]),(Just (ModulesSt (ModulesState 143 (System,False) (Just (ModuleName ["GHC","Show"]),Nothing) (ExpanderState {localExp = ([],[]), localExpNoBlack = ([],[]), packageExp = ([],[]), packageExpNoBlack = ([],[]), systemExp = ([],[]), systemExpNoBlack = ([[281,12],[281,4],[281],[129],[89],[86,38],[86],[70]],[])}))),[SplitP RightP,SplitP TopP]),(Just (SearchSt (SearchState {searchString = "showsPrec", searchScope = System, searchMode = Regex {caseSense = False}})),[SplitP RightP,SplitP TopP]),(Just (TraceSt TraceState),[SplitP RightP,SplitP TopP]),(Just (BufferSt (BufferState "C:\\Users\\magocoal\\Documents\\haskell\\devel\\Workflow-0.5.7\\Control\\Workflow\\Users.hs" 3446)),[SplitP LeftP]),(Just (VariablesSt VariablesState),[SplitP RightP,SplitP TopP]),(Just (BufferSt (BufferState "C:\\Users\\magocoal\\Documents\\haskell\\devel\\Workflow-0.6.0\\Control\\Workflow.hs" 6854)),[SplitP LeftP]),(Just (BufferSt (BufferStateTrans "_Eval.hs" "\n:l DocumentApprobalHTML.hs\n\n\nserialize1 $ Key (typeOf (undefined :: Int)) \"hola\"  \"Key (Int) hola\"\nserialize1 $ deserialize1 $ \"Key (Int) hola\"\n \"*** Exception: error reading Key in the expression: Key (Int) hola\n\n span (/= ')')  $ tail $ drop 4 \n \"Key (\" `isPrefixOf` \"Key (Int) hola\" " 1)),[SplitP RightP,SplitP TopP,GroupP "Debug",SplitP TopP,SplitP TopP]),(Just (BufferSt (BufferState "C:\\Users\\magocoal\\Documents\\haskell\\devel\\Workflow-0.5.7\\test.hs" 415)),[SplitP LeftP])]
Window size:   (1024,538)
Active package:
               Just "C:\\Users\\magocoal\\Documents\\haskell\\devel\\Workflow-0.5.7\\Workflow.cabal"
Active pane:   Just "Users.hs"
Toolbar visible:
               True
FindbarState:  (True,FindState {entryStr = "list", entryHist = ["list","Key","asFragments","\\\\","RunningWorkflows","all","map","WorkflowS","workflowS","wfs","getState","tvRunningWfs"], replaceStr = "/", replaceHist = [], caseSensitive = True, entireWord = False, wrapAround = True, regex = False, lineNr = 1})
Recently opened files:
               ["C:\\Users\\magocoal\\Documents\\haskell\\devel\\Workflow-0.5.7\\Demos\\Test.hs","C:\\Users\\magocoal\\Documents\\haskell\\devel\\Workflow-0.5.7\\test.hs","C:\\Users\\magocoal\\Documents\\haskell\\devel\\ghci.hs","C:\\Users\\magocoal\\Documents\\haskell\\devel\\Workflow-0.5.7\\test1.hs","C:\\Users\\magocoal\\Documents\\haskell\\devel\\ghci","C:\\Users\\magocoal\\Documents\\haskell\\devel\\TCache-0.6.6\\Data\\TCache.hs","C:\\Users\\magocoal\\Documents\\haskell\\devel\\Workflow-0.5.7\\Demos\\DocumentApprobalHTML.hs","C:\\Users\\magocoal\\Documents\\haskell\\devel\\Workflow-0.5.7\\Demos\\Test1.hs","C:\\Users\\magocoal\\Documents\\haskell\\devel\\Workflow-0.5.7\\Demos\\DocumentApprobalRefSerial.hs","C:\\Users\\magocoal\\Documents\\haskell\\devel\\Workflow-0.5.7\\Control\\HackMessageFlow.hs","C:\\Users\\magocoal\\Documents\\haskell\\devel\\Workflow-0.5.7\\Control\\MessageFlow.hs","C:\\Users\\magocoal\\Documents\\haskell\\devel\\Workflow-0.5.7\\Control\\Workflow.hs"]
Recently opened packages:
               ["C:\\Users\\magocoal\\Documents\\haskell\\devel\\TCache-0.6.6\\TCache.cabal","C:\\Users\\magocoal\\Documents\\haskell\\devel\\Workflow-0.5.7\\Workflow.cabal","C:\\Users\\magocoal\\Documents\\haskell\\devel\\Workflow-0.6.0\\Workflow.cabal","C:\\Users\\magocoal\\Documents\\haskell\\devel\\TraceT\\TraceT.cabal"]