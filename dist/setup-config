Saved package config for Workflow-0.7.0.0 written by Cabal-1.14.0 using ghc-7.4
LocalBuildInfo {configFlags = ConfigFlags {configPrograms = [], configProgramPaths = [], configProgramArgs = [], configHcFlavor = Flag GHC, configHcPath = NoFlag, configHcPkg = NoFlag, configVanillaLib = Flag True, configProfLib = Flag False, configSharedLib = Flag False, configDynExe = Flag False, configProfExe = Flag False, configConfigureArgs = [], configOptimization = Flag NormalOptimisation, configProgPrefix = Flag "", configProgSuffix = Flag "", configInstallDirs = InstallDirs {prefix = Flag "C:\\Users\\agocorona\\AppData\\Roaming\\cabal", bindir = NoFlag, libdir = NoFlag, libsubdir = NoFlag, dynlibdir = NoFlag, libexecdir = NoFlag, progdir = NoFlag, includedir = NoFlag, datadir = NoFlag, datasubdir = NoFlag, docdir = NoFlag, mandir = NoFlag, htmldir = NoFlag, haddockdir = NoFlag}, configScratchDir = NoFlag, configExtraLibDirs = [], configExtraIncludeDirs = [], configDistPref = Flag "dist", configVerbosity = Flag Normal, configUserInstall = Flag True, configPackageDB = NoFlag, configGHCiLib = Flag True, configSplitObjs = Flag False, configStripExes = Flag True, configConstraints = [Dependency (PackageName "stm") (ThisVersion (Version {versionBranch = [2,3], versionTags = []})),Dependency (PackageName "old-time") (ThisVersion (Version {versionBranch = [1,1,0,0], versionTags = []})),Dependency (PackageName "mtl") (ThisVersion (Version {versionBranch = [2,1,1], versionTags = []})),Dependency (PackageName "extensible-exceptions") (ThisVersion (Version {versionBranch = [0,1,1,4], versionTags = []})),Dependency (PackageName "directory") (ThisVersion (Version {versionBranch = [1,1,0,2], versionTags = []})),Dependency (PackageName "containers") (ThisVersion (Version {versionBranch = [0,4,2,1], versionTags = []})),Dependency (PackageName "bytestring") (ThisVersion (Version {versionBranch = [0,9,2,1], versionTags = []})),Dependency (PackageName "binary") (ThisVersion (Version {versionBranch = [0,5,1,0], versionTags = []})),Dependency (PackageName "base") (ThisVersion (Version {versionBranch = [4,5,0,0], versionTags = []})),Dependency (PackageName "TCache") (ThisVersion (Version {versionBranch = [0,10,0,1], versionTags = []})),Dependency (PackageName "RefSerialize") (ThisVersion (Version {versionBranch = [0,2,8,1], versionTags = []})),Dependency (PackageName "MonadCatchIO-mtl") (ThisVersion (Version {versionBranch = [0,3,0,4], versionTags = []}))], configConfigurationsFlags = [], configTests = Flag False, configBenchmarks = Flag False, configLibCoverage = Flag False}, extraConfigArgs = [], installDirTemplates = InstallDirs {prefix = "C:\\Users\\agocorona\\AppData\\Roaming\\cabal", bindir = "$prefix\\bin", libdir = "$prefix", libsubdir = "$pkgid\\$compiler", dynlibdir = "$libdir", libexecdir = "$prefix\\$pkgid", progdir = "$libdir\\hugs\\programs", includedir = "$libdir\\$libsubdir\\include", datadir = "$prefix", datasubdir = "$pkgid", docdir = "$datadir\\doc\\$pkgid", mandir = "$datadir\\man", htmldir = "$docdir\\html", haddockdir = "$htmldir"}, compiler = Compiler {compilerId = CompilerId GHC (Version {versionBranch = [7,4,1], versionTags = []}), compilerLanguages = [(Haskell98,"-XHaskell98"),(Haskell2010,"-XHaskell2010")], compilerExtensions = [(UnknownExtension "Haskell98","-XHaskell98"),(UnknownExtension "Haskell2010","-XHaskell2010"),(UnknownExtension "Unsafe","-XUnsafe"),(EnableExtension Trustworthy,"-XTrustworthy"),(EnableExtension Safe,"-XSafe"),(EnableExtension CPP,"-XCPP"),(DisableExtension CPP,"-XNoCPP"),(EnableExtension PostfixOperators,"-XPostfixOperators"),(DisableExtension PostfixOperators,"-XNoPostfixOperators"),(EnableExtension TupleSections,"-XTupleSections"),(DisableExtension TupleSections,"-XNoTupleSections"),(EnableExtension PatternGuards,"-XPatternGuards"),(DisableExtension PatternGuards,"-XNoPatternGuards"),(EnableExtension UnicodeSyntax,"-XUnicodeSyntax"),(DisableExtension UnicodeSyntax,"-XNoUnicodeSyntax"),(EnableExtension MagicHash,"-XMagicHash"),(DisableExtension MagicHash,"-XNoMagicHash"),(EnableExtension PolymorphicComponents,"-XPolymorphicComponents"),(DisableExtension PolymorphicComponents,"-XNoPolymorphicComponents"),(EnableExtension ExistentialQuantification,"-XExistentialQuantification"),(DisableExtension ExistentialQuantification,"-XNoExistentialQuantification"),(EnableExtension KindSignatures,"-XKindSignatures"),(DisableExtension KindSignatures,"-XNoKindSignatures"),(EnableExtension EmptyDataDecls,"-XEmptyDataDecls"),(DisableExtension EmptyDataDecls,"-XNoEmptyDataDecls"),(EnableExtension ParallelListComp,"-XParallelListComp"),(DisableExtension ParallelListComp,"-XNoParallelListComp"),(EnableExtension TransformListComp,"-XTransformListComp"),(DisableExtension TransformListComp,"-XNoTransformListComp"),(UnknownExtension "MonadComprehensions","-XMonadComprehensions"),(UnknownExtension "NoMonadComprehensions","-XNoMonadComprehensions"),(EnableExtension ForeignFunctionInterface,"-XForeignFunctionInterface"),(DisableExtension ForeignFunctionInterface,"-XNoForeignFunctionInterface"),(EnableExtension UnliftedFFITypes,"-XUnliftedFFITypes"),(DisableExtension UnliftedFFITypes,"-XNoUnliftedFFITypes"),(UnknownExtension "InterruptibleFFI","-XInterruptibleFFI"),(UnknownExtension "NoInterruptibleFFI","-XNoInterruptibleFFI"),(UnknownExtension "CApiFFI","-XCApiFFI"),(UnknownExtension "NoCApiFFI","-XNoCApiFFI"),(EnableExtension GHCForeignImportPrim,"-XGHCForeignImportPrim"),(DisableExtension GHCForeignImportPrim,"-XNoGHCForeignImportPrim"),(EnableExtension LiberalTypeSynonyms,"-XLiberalTypeSynonyms"),(DisableExtension LiberalTypeSynonyms,"-XNoLiberalTypeSynonyms"),(EnableExtension Rank2Types,"-XRank2Types"),(DisableExtension Rank2Types,"-XNoRank2Types"),(EnableExtension RankNTypes,"-XRankNTypes"),(DisableExtension RankNTypes,"-XNoRankNTypes"),(EnableExtension ImpredicativeTypes,"-XImpredicativeTypes"),(DisableExtension ImpredicativeTypes,"-XNoImpredicativeTypes"),(EnableExtension TypeOperators,"-XTypeOperators"),(DisableExtension TypeOperators,"-XNoTypeOperators"),(EnableExtension RecursiveDo,"-XRecursiveDo"),(DisableExtension RecursiveDo,"-XNoRecursiveDo"),(EnableExtension DoRec,"-XDoRec"),(DisableExtension DoRec,"-XNoDoRec"),(EnableExtension Arrows,"-XArrows"),(DisableExtension Arrows,"-XNoArrows"),(UnknownExtension "ParallelArrays","-XParallelArrays"),(UnknownExtension "NoParallelArrays","-XNoParallelArrays"),(EnableExtension TemplateHaskell,"-XTemplateHaskell"),(DisableExtension TemplateHaskell,"-XNoTemplateHaskell"),(EnableExtension QuasiQuotes,"-XQuasiQuotes"),(DisableExtension QuasiQuotes,"-XNoQuasiQuotes"),(EnableExtension ImplicitPrelude,"-XImplicitPrelude"),(DisableExtension ImplicitPrelude,"-XNoImplicitPrelude"),(EnableExtension RecordWildCards,"-XRecordWildCards"),(DisableExtension RecordWildCards,"-XNoRecordWildCards"),(EnableExtension NamedFieldPuns,"-XNamedFieldPuns"),(DisableExtension NamedFieldPuns,"-XNoNamedFieldPuns"),(EnableExtension RecordPuns,"-XRecordPuns"),(DisableExtension RecordPuns,"-XNoRecordPuns"),(EnableExtension DisambiguateRecordFields,"-XDisambiguateRecordFields"),(DisableExtension DisambiguateRecordFields,"-XNoDisambiguateRecordFields"),(EnableExtension OverloadedStrings,"-XOverloadedStrings"),(DisableExtension OverloadedStrings,"-XNoOverloadedStrings"),(EnableExtension GADTs,"-XGADTs"),(DisableExtension GADTs,"-XNoGADTs"),(EnableExtension GADTSyntax,"-XGADTSyntax"),(DisableExtension GADTSyntax,"-XNoGADTSyntax"),(EnableExtension ViewPatterns,"-XViewPatterns"),(DisableExtension ViewPatterns,"-XNoViewPatterns"),(EnableExtension TypeFamilies,"-XTypeFamilies"),(DisableExtension TypeFamilies,"-XNoTypeFamilies"),(EnableExtension BangPatterns,"-XBangPatterns"),(DisableExtension BangPatterns,"-XNoBangPatterns"),(EnableExtension MonomorphismRestriction,"-XMonomorphismRestriction"),(DisableExtension MonomorphismRestriction,"-XNoMonomorphismRestriction"),(EnableExtension NPlusKPatterns,"-XNPlusKPatterns"),(DisableExtension NPlusKPatterns,"-XNoNPlusKPatterns"),(EnableExtension DoAndIfThenElse,"-XDoAndIfThenElse"),(DisableExtension DoAndIfThenElse,"-XNoDoAndIfThenElse"),(EnableExtension RebindableSyntax,"-XRebindableSyntax"),(DisableExtension RebindableSyntax,"-XNoRebindableSyntax"),(EnableExtension ConstraintKinds,"-XConstraintKinds"),(DisableExtension ConstraintKinds,"-XNoConstraintKinds"),(UnknownExtension "PolyKinds","-XPolyKinds"),(UnknownExtension "NoPolyKinds","-XNoPolyKinds"),(UnknownExtension "DataKinds","-XDataKinds"),(UnknownExtension "NoDataKinds","-XNoDataKinds"),(EnableExtension MonoPatBinds,"-XMonoPatBinds"),(DisableExtension MonoPatBinds,"-XNoMonoPatBinds"),(EnableExtension ExplicitForAll,"-XExplicitForAll"),(DisableExtension ExplicitForAll,"-XNoExplicitForAll"),(UnknownExtension "AlternativeLayoutRule","-XAlternativeLayoutRule"),(UnknownExtension "NoAlternativeLayoutRule","-XNoAlternativeLayoutRule"),(UnknownExtension "AlternativeLayoutRuleTransitional","-XAlternativeLayoutRuleTransitional"),(UnknownExtension "NoAlternativeLayoutRuleTransitional","-XNoAlternativeLayoutRuleTransitional"),(EnableExtension DatatypeContexts,"-XDatatypeContexts"),(DisableExtension DatatypeContexts,"-XNoDatatypeContexts"),(EnableExtension NondecreasingIndentation,"-XNondecreasingIndentation"),(DisableExtension NondecreasingIndentation,"-XNoNondecreasingIndentation"),(UnknownExtension "RelaxedLayout","-XRelaxedLayout"),(UnknownExtension "NoRelaxedLayout","-XNoRelaxedLayout"),(UnknownExtension "TraditionalRecordSyntax","-XTraditionalRecordSyntax"),(UnknownExtension "NoTraditionalRecordSyntax","-XNoTraditionalRecordSyntax"),(EnableExtension MonoLocalBinds,"-XMonoLocalBinds"),(DisableExtension MonoLocalBinds,"-XNoMonoLocalBinds"),(EnableExtension RelaxedPolyRec,"-XRelaxedPolyRec"),(DisableExtension RelaxedPolyRec,"-XNoRelaxedPolyRec"),(EnableExtension ExtendedDefaultRules,"-XExtendedDefaultRules"),(DisableExtension ExtendedDefaultRules,"-XNoExtendedDefaultRules"),(EnableExtension ImplicitParams,"-XImplicitParams"),(DisableExtension ImplicitParams,"-XNoImplicitParams"),(EnableExtension ScopedTypeVariables,"-XScopedTypeVariables"),(DisableExtension ScopedTypeVariables,"-XNoScopedTypeVariables"),(EnableExtension PatternSignatures,"-XPatternSignatures"),(DisableExtension PatternSignatures,"-XNoPatternSignatures"),(EnableExtension UnboxedTuples,"-XUnboxedTuples"),(DisableExtension UnboxedTuples,"-XNoUnboxedTuples"),(EnableExtension StandaloneDeriving,"-XStandaloneDeriving"),(DisableExtension StandaloneDeriving,"-XNoStandaloneDeriving"),(EnableExtension DeriveDataTypeable,"-XDeriveDataTypeable"),(DisableExtension DeriveDataTypeable,"-XNoDeriveDataTypeable"),(EnableExtension DeriveFunctor,"-XDeriveFunctor"),(DisableExtension DeriveFunctor,"-XNoDeriveFunctor"),(EnableExtension DeriveTraversable,"-XDeriveTraversable"),(DisableExtension DeriveTraversable,"-XNoDeriveTraversable"),(EnableExtension DeriveFoldable,"-XDeriveFoldable"),(DisableExtension DeriveFoldable,"-XNoDeriveFoldable"),(UnknownExtension "DeriveGeneric","-XDeriveGeneric"),(UnknownExtension "NoDeriveGeneric","-XNoDeriveGeneric"),(UnknownExtension "DefaultSignatures","-XDefaultSignatures"),(UnknownExtension "NoDefaultSignatures","-XNoDefaultSignatures"),(EnableExtension TypeSynonymInstances,"-XTypeSynonymInstances"),(DisableExtension TypeSynonymInstances,"-XNoTypeSynonymInstances"),(EnableExtension FlexibleContexts,"-XFlexibleContexts"),(DisableExtension FlexibleContexts,"-XNoFlexibleContexts"),(EnableExtension FlexibleInstances,"-XFlexibleInstances"),(DisableExtension FlexibleInstances,"-XNoFlexibleInstances"),(EnableExtension ConstrainedClassMethods,"-XConstrainedClassMethods"),(DisableExtension ConstrainedClassMethods,"-XNoConstrainedClassMethods"),(EnableExtension MultiParamTypeClasses,"-XMultiParamTypeClasses"),(DisableExtension MultiParamTypeClasses,"-XNoMultiParamTypeClasses"),(EnableExtension FunctionalDependencies,"-XFunctionalDependencies"),(DisableExtension FunctionalDependencies,"-XNoFunctionalDependencies"),(EnableExtension GeneralizedNewtypeDeriving,"-XGeneralizedNewtypeDeriving"),(DisableExtension GeneralizedNewtypeDeriving,"-XNoGeneralizedNewtypeDeriving"),(EnableExtension OverlappingInstances,"-XOverlappingInstances"),(DisableExtension OverlappingInstances,"-XNoOverlappingInstances"),(EnableExtension UndecidableInstances,"-XUndecidableInstances"),(DisableExtension UndecidableInstances,"-XNoUndecidableInstances"),(EnableExtension IncoherentInstances,"-XIncoherentInstances"),(DisableExtension IncoherentInstances,"-XNoIncoherentInstances"),(EnableExtension PackageImports,"-XPackageImports"),(DisableExtension PackageImports,"-XNoPackageImports")]}, buildDir = "dist\\build", scratchDir = "dist\\scratch", libraryConfig = Just (ComponentLocalBuildInfo {componentPackageDeps = [(InstalledPackageId "MonadCatchIO-mtl-0.3.0.4-ab5f19ece655cdbb3251a0e3dba8205b",PackageIdentifier {pkgName = PackageName "MonadCatchIO-mtl", pkgVersion = Version {versionBranch = [0,3,0,4], versionTags = []}}),(InstalledPackageId "RefSerialize-0.2.8.1-80a3dbab8a08c01d64c102718a393704",PackageIdentifier {pkgName = PackageName "RefSerialize", pkgVersion = Version {versionBranch = [0,2,8,1], versionTags = []}}),(InstalledPackageId "TCache-0.10.0.1-88046934453fd6e87b1ed30914546523",PackageIdentifier {pkgName = PackageName "TCache", pkgVersion = Version {versionBranch = [0,10,0,1], versionTags = []}}),(InstalledPackageId "base-4.5.0.0-597748f6f53a7442bcae283373264bb6",PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [4,5,0,0], versionTags = []}}),(InstalledPackageId "binary-0.5.1.0-75e3c50586498e97c9eeb9990bbdf80d",PackageIdentifier {pkgName = PackageName "binary", pkgVersion = Version {versionBranch = [0,5,1,0], versionTags = []}}),(InstalledPackageId "bytestring-0.9.2.1-df82064cddbf74693df4e042927e015e",PackageIdentifier {pkgName = PackageName "bytestring", pkgVersion = Version {versionBranch = [0,9,2,1], versionTags = []}}),(InstalledPackageId "containers-0.4.2.1-7c54595400348f577b3b4a45691c5afd",PackageIdentifier {pkgName = PackageName "containers", pkgVersion = Version {versionBranch = [0,4,2,1], versionTags = []}}),(InstalledPackageId "directory-1.1.0.2-0270278088d4b2588b52cbec49af4cb7",PackageIdentifier {pkgName = PackageName "directory", pkgVersion = Version {versionBranch = [1,1,0,2], versionTags = []}}),(InstalledPackageId "extensible-exceptions-0.1.1.4-d27a1ac47e54880cae007cceceb41580",PackageIdentifier {pkgName = PackageName "extensible-exceptions", pkgVersion = Version {versionBranch = [0,1,1,4], versionTags = []}}),(InstalledPackageId "mtl-2.1.1-87121149c5eb4fc03f06f5894ea4ac0c",PackageIdentifier {pkgName = PackageName "mtl", pkgVersion = Version {versionBranch = [2,1,1], versionTags = []}}),(InstalledPackageId "old-time-1.1.0.0-7b2e123ada736534f8119498399ea8c8",PackageIdentifier {pkgName = PackageName "old-time", pkgVersion = Version {versionBranch = [1,1,0,0], versionTags = []}}),(InstalledPackageId "stm-2.3-2735f77d3e207163ae60f86094d82cd7",PackageIdentifier {pkgName = PackageName "stm", pkgVersion = Version {versionBranch = [2,3], versionTags = []}})]}), executableConfigs = [], compBuildOrder = [CLibName], testSuiteConfigs = [], benchmarkConfigs = [], installedPkgs = PackageIndex (fromList [(InstalledPackageId "MonadCatchIO-mtl-0.3.0.4-ab5f19ece655cdbb3251a0e3dba8205b",InstalledPackageInfo {installedPackageId = InstalledPackageId "MonadCatchIO-mtl-0.3.0.4-ab5f19ece655cdbb3251a0e3dba8205b", sourcePackageId = PackageIdentifier {pkgName = PackageName "MonadCatchIO-mtl", pkgVersion = Version {versionBranch = [0,3,0,4], versionTags = []}}, license = BSD3, copyright = "", maintainer = "jcpetruzza@gmail.com", author = "", stability = "", homepage = "http://darcsden.com/jcpetruzza/MonadCatchIO-mtl", pkgUrl = "", synopsis = "Monad-transformer version of the Control.Exception module", description = "Provides a monad-transformer version of the @Control.Exception.catch@\nfunction. For this, it defines the @MonadCatchIO@ class, a subset of\n@MonadIO@. It defines proper instances for most monad transformers in\nthe 'mtl' library.", category = "Control", exposed = True, exposedModules = [ModuleName ["Control","Monad","CatchIO"]], hiddenModules = [], trusted = False, importDirs = ["C:\\Users\\agocorona\\AppData\\Roaming\\cabal\\MonadCatchIO-mtl-0.3.0.4\\ghc-7.4.1"], libraryDirs = ["C:\\Users\\agocorona\\AppData\\Roaming\\cabal\\MonadCatchIO-mtl-0.3.0.4\\ghc-7.4.1"], hsLibraries = ["HSMonadCatchIO-mtl-0.3.0.4"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-4.5.0.0-597748f6f53a7442bcae283373264bb6",InstalledPackageId "extensible-exceptions-0.1.1.4-d27a1ac47e54880cae007cceceb41580",InstalledPackageId "mtl-2.1.1-87121149c5eb4fc03f06f5894ea4ac0c"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Users\\agocorona\\AppData\\Roaming\\cabal\\doc\\MonadCatchIO-mtl-0.3.0.4\\html\\MonadCatchIO-mtl.haddock"], haddockHTMLs = ["C:\\Users\\agocorona\\AppData\\Roaming\\cabal\\doc\\MonadCatchIO-mtl-0.3.0.4\\html"]}),(InstalledPackageId "RefSerialize-0.2.8.1-80a3dbab8a08c01d64c102718a393704",InstalledPackageInfo {installedPackageId = InstalledPackageId "RefSerialize-0.2.8.1-80a3dbab8a08c01d64c102718a393704", sourcePackageId = PackageIdentifier {pkgName = PackageName "RefSerialize", pkgVersion = Version {versionBranch = [0,2,8,1], versionTags = []}}, license = BSD3, copyright = "", maintainer = "agocorona@gmail.com", author = "Alberto G\243mez Corona", stability = "", homepage = "", pkgUrl = "", synopsis = "Write to and read from ByteStrings maintaining internal memory references", description = "Read, Show and Binary instances do not check for internal data references to the same address.\nAs a result, the data is duplicated when serialized. This is a waste of space in the filesystem\nand  also a waste of serialization time. but the worst consequence is that, when the serialized data is read,\nit allocates multiple copies for the same object when referenced multiple times. Because multiple referenced\ndata is very typical in a pure language such is Haskell, this means that the resulting data loose the beatiful\neconomy of space and processing time that referential transparency permits.\n\nSee \"Data.RefSerialize\" for details", category = "Parsing, Data, Database", exposed = True, exposedModules = [ModuleName ["Data","RefSerialize"],ModuleName ["Data","RefSerialize","Parser"],ModuleName ["Data","RefSerialize","Serialize"]], hiddenModules = [], trusted = False, importDirs = ["C:\\Users\\agocorona\\AppData\\Roaming\\cabal\\RefSerialize-0.2.8.1\\ghc-7.4.1"], libraryDirs = ["C:\\Users\\agocorona\\AppData\\Roaming\\cabal\\RefSerialize-0.2.8.1\\ghc-7.4.1"], hsLibraries = ["HSRefSerialize-0.2.8.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-4.5.0.0-597748f6f53a7442bcae283373264bb6",InstalledPackageId "binary-0.5.1.0-75e3c50586498e97c9eeb9990bbdf80d",InstalledPackageId "bytestring-0.9.2.1-df82064cddbf74693df4e042927e015e",InstalledPackageId "containers-0.4.2.1-7c54595400348f577b3b4a45691c5afd"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Users\\agocorona\\AppData\\Roaming\\cabal\\doc\\RefSerialize-0.2.8.1\\html\\RefSerialize.haddock"], haddockHTMLs = ["C:\\Users\\agocorona\\AppData\\Roaming\\cabal\\doc\\RefSerialize-0.2.8.1\\html"]}),(InstalledPackageId "TCache-0.10.0.1-88046934453fd6e87b1ed30914546523",InstalledPackageInfo {installedPackageId = InstalledPackageId "TCache-0.10.0.1-88046934453fd6e87b1ed30914546523", sourcePackageId = PackageIdentifier {pkgName = PackageName "TCache", pkgVersion = Version {versionBranch = [0,10,0,1], versionTags = []}}, license = BSD3, copyright = "", maintainer = "agocorona@gmail.com", author = "Alberto G\243mez Corona", stability = "", homepage = "", pkgUrl = "", synopsis = "A Transactional cache with user-defined persistence", description = "TCache is a transactional cache with configurable persitence. It allows conventional\nSTM transactions for objects that syncronize  with\ntheir user defined storages.\nState in memory and into permanent storage is transactionally coherent.\n\nThe package implements serializable STM references, access by key and by record field value, triggers,\nfull text and field indexation, default serialization and a query language based on record fields\n\nThis version add memoization and a persistent and transactional collection/queue\n\nSee \"Data.TCache\" for details", category = "Data, Database", exposed = True, exposedModules = [ModuleName ["Data","TCache"],ModuleName ["Data","TCache","DefaultPersistence"],ModuleName ["Data","TCache","Defs"],ModuleName ["Data","TCache","IResource"],ModuleName ["Data","TCache","IndexQuery"],ModuleName ["Data","TCache","IndexText"],ModuleName ["Data","TCache","Memoization"],ModuleName ["Data","TCache","Triggers"],ModuleName ["Data","Persistent","Collection"]], hiddenModules = [], trusted = False, importDirs = ["C:\\Users\\agocorona\\AppData\\Roaming\\cabal\\TCache-0.10.0.1\\ghc-7.4.1"], libraryDirs = ["C:\\Users\\agocorona\\AppData\\Roaming\\cabal\\TCache-0.10.0.1\\ghc-7.4.1"], hsLibraries = ["HSTCache-0.10.0.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "RefSerialize-0.2.8.1-80a3dbab8a08c01d64c102718a393704",InstalledPackageId "base-4.5.0.0-597748f6f53a7442bcae283373264bb6",InstalledPackageId "bytestring-0.9.2.1-df82064cddbf74693df4e042927e015e",InstalledPackageId "containers-0.4.2.1-7c54595400348f577b3b4a45691c5afd",InstalledPackageId "directory-1.1.0.2-0270278088d4b2588b52cbec49af4cb7",InstalledPackageId "mtl-2.1.1-87121149c5eb4fc03f06f5894ea4ac0c",InstalledPackageId "old-time-1.1.0.0-7b2e123ada736534f8119498399ea8c8",InstalledPackageId "stm-2.3-2735f77d3e207163ae60f86094d82cd7",InstalledPackageId "text-0.11.2.0-b2986f5478f0efa626f8ba0494ed9670"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Users\\agocorona\\AppData\\Roaming\\cabal\\doc\\TCache-0.10.0.1\\html\\TCache.haddock"], haddockHTMLs = ["C:\\Users\\agocorona\\AppData\\Roaming\\cabal\\doc\\TCache-0.10.0.1\\html"]}),(InstalledPackageId "Win32-2.2.2.0-2a213fd84250935e110f763f480534bd",InstalledPackageInfo {installedPackageId = InstalledPackageId "Win32-2.2.2.0-2a213fd84250935e110f763f480534bd", sourcePackageId = PackageIdentifier {pkgName = PackageName "Win32", pkgVersion = Version {versionBranch = [2,2,2,0], versionTags = []}}, license = BSD3, copyright = "Alastair Reid, 1999-2003", maintainer = "Bryan O'Sullivan <bos@serpentine.com>", author = "Alastair Reid", stability = "", homepage = "https://github.com/haskell/win32", pkgUrl = "", synopsis = "A binding to part of the Win32 library", description = "A binding to part of the Win32 library.", category = "System, Graphics", exposed = True, exposedModules = [ModuleName ["Graphics","Win32","GDI"],ModuleName ["Graphics","Win32","GDI","Bitmap"],ModuleName ["Graphics","Win32","GDI","Brush"],ModuleName ["Graphics","Win32","GDI","Clip"],ModuleName ["Graphics","Win32","GDI","Font"],ModuleName ["Graphics","Win32","GDI","Graphics2D"],ModuleName ["Graphics","Win32","GDI","HDC"],ModuleName ["Graphics","Win32","GDI","Palette"],ModuleName ["Graphics","Win32","GDI","Path"],ModuleName ["Graphics","Win32","GDI","Pen"],ModuleName ["Graphics","Win32","GDI","Region"],ModuleName ["Graphics","Win32","GDI","Types"],ModuleName ["Graphics","Win32"],ModuleName ["Graphics","Win32","Control"],ModuleName ["Graphics","Win32","Dialogue"],ModuleName ["Graphics","Win32","Icon"],ModuleName ["Graphics","Win32","Key"],ModuleName ["Graphics","Win32","Menu"],ModuleName ["Graphics","Win32","Message"],ModuleName ["Graphics","Win32","Misc"],ModuleName ["Graphics","Win32","Resource"],ModuleName ["Graphics","Win32","Window"],ModuleName ["System","Win32"],ModuleName ["System","Win32","DebugApi"],ModuleName ["System","Win32","DLL"],ModuleName ["System","Win32","File"],ModuleName ["System","Win32","FileMapping"],ModuleName ["System","Win32","Info"],ModuleName ["System","Win32","Mem"],ModuleName ["System","Win32","NLS"],ModuleName ["System","Win32","Process"],ModuleName ["System","Win32","Registry"],ModuleName ["System","Win32","SimpleMAPI"],ModuleName ["System","Win32","Time"],ModuleName ["System","Win32","Console"],ModuleName ["System","Win32","Security"],ModuleName ["System","Win32","Types"],ModuleName ["System","Win32","Shell"]], hiddenModules = [], trusted = False, importDirs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\Win32-2.2.2.0"], libraryDirs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\Win32-2.2.2.0"], hsLibraries = ["HSWin32-2.2.2.0"], extraLibraries = ["user32","gdi32","winmm","advapi32","shell32","shfolder"], extraGHCiLibraries = [], includeDirs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\Win32-2.2.2.0\\include"], includes = ["HsWin32.h","HsGDI.h","WndProc.h"], depends = [InstalledPackageId "base-4.5.0.0-597748f6f53a7442bcae283373264bb6",InstalledPackageId "bytestring-0.9.2.1-df82064cddbf74693df4e042927e015e"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib/../doc/html/libraries/Win32-2.2.2.0\\Win32.haddock"], haddockHTMLs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib/../doc/html/libraries/Win32-2.2.2.0"]}),(InstalledPackageId "array-0.4.0.0-3cf1bc3f5cd0078adea24752c18081b9",InstalledPackageInfo {installedPackageId = InstalledPackageId "array-0.4.0.0-3cf1bc3f5cd0078adea24752c18081b9", sourcePackageId = PackageIdentifier {pkgName = PackageName "array", pkgVersion = Version {versionBranch = [0,4,0,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "Mutable and immutable arrays", description = "This package defines the classes @IArray@ of immutable arrays and\n@MArray@ of arrays mutable within appropriate monads, as well as\nsome instances of these classes.", category = "Data Structures", exposed = True, exposedModules = [ModuleName ["Data","Array","Base"],ModuleName ["Data","Array","IArray"],ModuleName ["Data","Array","IO"],ModuleName ["Data","Array","IO","Safe"],ModuleName ["Data","Array","IO","Internals"],ModuleName ["Data","Array","MArray"],ModuleName ["Data","Array","MArray","Safe"],ModuleName ["Data","Array","ST"],ModuleName ["Data","Array","ST","Safe"],ModuleName ["Data","Array","Storable"],ModuleName ["Data","Array","Storable","Safe"],ModuleName ["Data","Array","Storable","Internals"],ModuleName ["Data","Array","Unboxed"],ModuleName ["Data","Array","Unsafe"],ModuleName ["Data","Array"]], hiddenModules = [], trusted = False, importDirs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\array-0.4.0.0"], libraryDirs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\array-0.4.0.0"], hsLibraries = ["HSarray-0.4.0.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-4.5.0.0-597748f6f53a7442bcae283373264bb6"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib/../doc/html/libraries/array-0.4.0.0\\array.haddock"], haddockHTMLs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib/../doc/html/libraries/array-0.4.0.0"]}),(InstalledPackageId "base-4.5.0.0-597748f6f53a7442bcae283373264bb6",InstalledPackageInfo {installedPackageId = InstalledPackageId "base-4.5.0.0-597748f6f53a7442bcae283373264bb6", sourcePackageId = PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [4,5,0,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "Basic libraries", description = "This package contains the Prelude and its support libraries,\nand a large collection of useful libraries ranging from data\nstructures to parsing combinators and debugging utilities.", category = "", exposed = True, exposedModules = [ModuleName ["GHC","IO","Encoding","CodePage","Table"],ModuleName ["GHC","Conc","Windows"],ModuleName ["GHC","Windows"],ModuleName ["Foreign","Concurrent"],ModuleName ["GHC","Arr"],ModuleName ["GHC","Base"],ModuleName ["GHC","Conc"],ModuleName ["GHC","Conc","IO"],ModuleName ["GHC","Conc","Signal"],ModuleName ["GHC","Conc","Sync"],ModuleName ["GHC","ConsoleHandler"],ModuleName ["GHC","Constants"],ModuleName ["GHC","Desugar"],ModuleName ["GHC","Enum"],ModuleName ["GHC","Environment"],ModuleName ["GHC","Err"],ModuleName ["GHC","Exception"],ModuleName ["GHC","Exts"],ModuleName ["GHC","Fingerprint"],ModuleName ["GHC","Fingerprint","Type"],ModuleName ["GHC","Float"],ModuleName ["GHC","Float","ConversionUtils"],ModuleName ["GHC","Float","RealFracMethods"],ModuleName ["GHC","Foreign"],ModuleName ["GHC","ForeignPtr"],ModuleName ["GHC","Handle"],ModuleName ["GHC","IO"],ModuleName ["GHC","IO","Buffer"],ModuleName ["GHC","IO","BufferedIO"],ModuleName ["GHC","IO","Device"],ModuleName ["GHC","IO","Encoding"],ModuleName ["GHC","IO","Encoding","CodePage"],ModuleName ["GHC","IO","Encoding","Failure"],ModuleName ["GHC","IO","Encoding","Iconv"],ModuleName ["GHC","IO","Encoding","Latin1"],ModuleName ["GHC","IO","Encoding","Types"],ModuleName ["GHC","IO","Encoding","UTF16"],ModuleName ["GHC","IO","Encoding","UTF32"],ModuleName ["GHC","IO","Encoding","UTF8"],ModuleName ["GHC","IO","Exception"],ModuleName ["GHC","IO","FD"],ModuleName ["GHC","IO","Handle"],ModuleName ["GHC","IO","Handle","FD"],ModuleName ["GHC","IO","Handle","Internals"],ModuleName ["GHC","IO","Handle","Text"],ModuleName ["GHC","IO","Handle","Types"],ModuleName ["GHC","IO","IOMode"],ModuleName ["GHC","IOArray"],ModuleName ["GHC","IOBase"],ModuleName ["GHC","IORef"],ModuleName ["GHC","Int"],ModuleName ["GHC","List"],ModuleName ["GHC","MVar"],ModuleName ["GHC","Num"],ModuleName ["GHC","PArr"],ModuleName ["GHC","Pack"],ModuleName ["GHC","Ptr"],ModuleName ["GHC","Read"],ModuleName ["GHC","Real"],ModuleName ["GHC","ST"],ModuleName ["GHC","Stack"],ModuleName ["GHC","Stats"],ModuleName ["GHC","Show"],ModuleName ["GHC","Stable"],ModuleName ["GHC","Storable"],ModuleName ["GHC","STRef"],ModuleName ["GHC","TopHandler"],ModuleName ["GHC","Unicode"],ModuleName ["GHC","Weak"],ModuleName ["GHC","Word"],ModuleName ["System","Timeout"],ModuleName ["Control","Applicative"],ModuleName ["Control","Arrow"],ModuleName ["Control","Category"],ModuleName ["Control","Concurrent"],ModuleName ["Control","Concurrent","Chan"],ModuleName ["Control","Concurrent","MVar"],ModuleName ["Control","Concurrent","QSem"],ModuleName ["Control","Concurrent","QSemN"],ModuleName ["Control","Concurrent","SampleVar"],ModuleName ["Control","Exception"],ModuleName ["Control","Exception","Base"],ModuleName ["Control","OldException"],ModuleName ["Control","Monad"],ModuleName ["Control","Monad","Fix"],ModuleName ["Control","Monad","Instances"],ModuleName ["Control","Monad","ST"],ModuleName ["Control","Monad","ST","Safe"],ModuleName ["Control","Monad","ST","Unsafe"],ModuleName ["Control","Monad","ST","Lazy"],ModuleName ["Control","Monad","ST","Lazy","Safe"],ModuleName ["Control","Monad","ST","Lazy","Unsafe"],ModuleName ["Control","Monad","ST","Strict"],ModuleName ["Control","Monad","Zip"],ModuleName ["Data","Bits"],ModuleName ["Data","Bool"],ModuleName ["Data","Char"],ModuleName ["Data","Complex"],ModuleName ["Data","Dynamic"],ModuleName ["Data","Either"],ModuleName ["Data","Eq"],ModuleName ["Data","Data"],ModuleName ["Data","Fixed"],ModuleName ["Data","Foldable"],ModuleName ["Data","Function"],ModuleName ["Data","Functor"],ModuleName ["Data","HashTable"],ModuleName ["Data","IORef"],ModuleName ["Data","Int"],ModuleName ["Data","Ix"],ModuleName ["Data","List"],ModuleName ["Data","Maybe"],ModuleName ["Data","Monoid"],ModuleName ["Data","Ord"],ModuleName ["Data","Ratio"],ModuleName ["Data","STRef"],ModuleName ["Data","STRef","Lazy"],ModuleName ["Data","STRef","Strict"],ModuleName ["Data","String"],ModuleName ["Data","Traversable"],ModuleName ["Data","Tuple"],ModuleName ["Data","Typeable"],ModuleName ["Data","Typeable","Internal"],ModuleName ["Data","Unique"],ModuleName ["Data","Version"],ModuleName ["Data","Word"],ModuleName ["Debug","Trace"],ModuleName ["Foreign"],ModuleName ["Foreign","C"],ModuleName ["Foreign","C","Error"],ModuleName ["Foreign","C","String"],ModuleName ["Foreign","C","Types"],ModuleName ["Foreign","ForeignPtr"],ModuleName ["Foreign","ForeignPtr","Safe"],ModuleName ["Foreign","ForeignPtr","Unsafe"],ModuleName ["Foreign","Marshal"],ModuleName ["Foreign","Marshal","Alloc"],ModuleName ["Foreign","Marshal","Array"],ModuleName ["Foreign","Marshal","Error"],ModuleName ["Foreign","Marshal","Pool"],ModuleName ["Foreign","Marshal","Safe"],ModuleName ["Foreign","Marshal","Utils"],ModuleName ["Foreign","Marshal","Unsafe"],ModuleName ["Foreign","Ptr"],ModuleName ["Foreign","Safe"],ModuleName ["Foreign","StablePtr"],ModuleName ["Foreign","Storable"],ModuleName ["Numeric"],ModuleName ["Prelude"],ModuleName ["System","Console","GetOpt"],ModuleName ["System","CPUTime"],ModuleName ["System","Environment"],ModuleName ["System","Exit"],ModuleName ["System","IO"],ModuleName ["System","IO","Error"],ModuleName ["System","IO","Unsafe"],ModuleName ["System","Info"],ModuleName ["System","Mem"],ModuleName ["System","Mem","StableName"],ModuleName ["System","Mem","Weak"],ModuleName ["System","Posix","Internals"],ModuleName ["System","Posix","Types"],ModuleName ["Text","ParserCombinators","ReadP"],ModuleName ["Text","ParserCombinators","ReadPrec"],ModuleName ["Text","Printf"],ModuleName ["Text","Read"],ModuleName ["Text","Read","Lex"],ModuleName ["Text","Show"],ModuleName ["Text","Show","Functions"],ModuleName ["Unsafe","Coerce"]], hiddenModules = [ModuleName ["Control","Monad","ST","Imp"],ModuleName ["Control","Monad","ST","Lazy","Imp"],ModuleName ["Foreign","ForeignPtr","Imp"]], trusted = False, importDirs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\base-4.5.0.0"], libraryDirs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\base-4.5.0.0"], hsLibraries = ["HSbase-4.5.0.0"], extraLibraries = ["wsock32","user32","shell32"], extraGHCiLibraries = [], includeDirs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\base-4.5.0.0\\include"], includes = ["HsBase.h"], depends = [InstalledPackageId "ghc-prim-0.2.0.0-060ce16c8998fd251a77ecf9e6561c86",InstalledPackageId "integer-gmp-0.4.0.0-ec87c5d9609a1d46da031ef5d51c4f79",InstalledPackageId "builtin_rts"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib/../doc/html/libraries/base-4.5.0.0\\base.haddock"], haddockHTMLs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib/../doc/html/libraries/base-4.5.0.0"]}),(InstalledPackageId "binary-0.5.1.0-75e3c50586498e97c9eeb9990bbdf80d",InstalledPackageInfo {installedPackageId = InstalledPackageId "binary-0.5.1.0-75e3c50586498e97c9eeb9990bbdf80d", sourcePackageId = PackageIdentifier {pkgName = PackageName "binary", pkgVersion = Version {versionBranch = [0,5,1,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "Lennart Kolmodin, Don Stewart <dons@galois.com>", author = "Lennart Kolmodin <kolmodin@gmail.com>", stability = "provisional", homepage = "http://code.haskell.org/binary/", pkgUrl = "", synopsis = "Binary serialisation for Haskell values using lazy ByteStrings", description = "Efficient, pure binary serialisation using lazy ByteStrings.\nHaskell values may be encoded to and from binary formats,\nwritten to disk as binary, or sent over the network.\nSerialisation speeds of over 1 G\\/sec have been observed,\nso this library should be suitable for high performance\nscenarios.", category = "Data, Parsing", exposed = True, exposedModules = [ModuleName ["Data","Binary"],ModuleName ["Data","Binary","Put"],ModuleName ["Data","Binary","Get"],ModuleName ["Data","Binary","Builder"],ModuleName ["Data","Binary","Builder","Internal"]], hiddenModules = [ModuleName ["Data","Binary","Builder","Base"]], trusted = False, importDirs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\binary-0.5.1.0"], libraryDirs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\binary-0.5.1.0"], hsLibraries = ["HSbinary-0.5.1.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "array-0.4.0.0-3cf1bc3f5cd0078adea24752c18081b9",InstalledPackageId "base-4.5.0.0-597748f6f53a7442bcae283373264bb6",InstalledPackageId "bytestring-0.9.2.1-df82064cddbf74693df4e042927e015e",InstalledPackageId "containers-0.4.2.1-7c54595400348f577b3b4a45691c5afd"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib/../doc/html/libraries/binary-0.5.1.0\\binary.haddock"], haddockHTMLs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib/../doc/html/libraries/binary-0.5.1.0"]}),(InstalledPackageId "builtin_rts",InstalledPackageInfo {installedPackageId = InstalledPackageId "builtin_rts", sourcePackageId = PackageIdentifier {pkgName = PackageName "rts", pkgVersion = Version {versionBranch = [1,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "glasgow-haskell-users@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "", description = "", category = "", exposed = True, exposedModules = [], hiddenModules = [], trusted = False, importDirs = [], libraryDirs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib"], hsLibraries = ["HSrts"], extraLibraries = ["m","wsock32"], extraGHCiLibraries = [], includeDirs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib/include"], includes = ["Stg.h"], depends = [], hugsOptions = [], ccOptions = [], ldOptions = ["-u","_ghczmprim_GHCziTypes_Izh_static_info","-u","_ghczmprim_GHCziTypes_Czh_static_info","-u","_ghczmprim_GHCziTypes_Fzh_static_info","-u","_ghczmprim_GHCziTypes_Dzh_static_info","-u","_base_GHCziPtr_Ptr_static_info","-u","_base_GHCziWord_Wzh_static_info","-u","_base_GHCziInt_I8zh_static_info","-u","_base_GHCziInt_I16zh_static_info","-u","_base_GHCziInt_I32zh_static_info","-u","_base_GHCziInt_I64zh_static_info","-u","_base_GHCziWord_W8zh_static_info","-u","_base_GHCziWord_W16zh_static_info","-u","_base_GHCziWord_W32zh_static_info","-u","_base_GHCziWord_W64zh_static_info","-u","_base_GHCziStable_StablePtr_static_info","-u","_ghczmprim_GHCziTypes_Izh_con_info","-u","_ghczmprim_GHCziTypes_Czh_con_info","-u","_ghczmprim_GHCziTypes_Fzh_con_info","-u","_ghczmprim_GHCziTypes_Dzh_con_info","-u","_base_GHCziPtr_Ptr_con_info","-u","_base_GHCziPtr_FunPtr_con_info","-u","_base_GHCziStable_StablePtr_con_info","-u","_ghczmprim_GHCziTypes_False_closure","-u","_ghczmprim_GHCziTypes_True_closure","-u","_base_GHCziPack_unpackCString_closure","-u","_base_GHCziIOziException_stackOverflow_closure","-u","_base_GHCziIOziException_heapOverflow_closure","-u","_base_ControlziExceptionziBase_nonTermination_closure","-u","_base_GHCziIOziException_blockedIndefinitelyOnMVar_closure","-u","_base_GHCziIOziException_blockedIndefinitelyOnSTM_closure","-u","_base_ControlziExceptionziBase_nestedAtomically_closure","-u","_base_GHCziWeak_runFinalizzerBatch_closure","-u","_base_GHCziTopHandler_flushStdHandles_closure","-u","_base_GHCziTopHandler_runIO_closure","-u","_base_GHCziTopHandler_runNonIO_closure","-u","_base_GHCziConcziIO_ensureIOManagerIsRunning_closure","-u","_base_GHCziConcziSync_runSparks_closure","-u","_base_GHCziConcziSignal_runHandlers_closure"], frameworkDirs = [], frameworks = [], haddockInterfaces = [], haddockHTMLs = []}),(InstalledPackageId "bytestring-0.9.2.1-df82064cddbf74693df4e042927e015e",InstalledPackageInfo {installedPackageId = InstalledPackageId "bytestring-0.9.2.1-df82064cddbf74693df4e042927e015e", sourcePackageId = PackageIdentifier {pkgName = PackageName "bytestring", pkgVersion = Version {versionBranch = [0,9,2,1], versionTags = []}}, license = BSD3, copyright = "Copyright (c) Don Stewart   2005-2009,\n(c) Duncan Coutts 2006-2009,\n(c) David Roundy  2003-2005.", maintainer = "dons00@gmail.com, duncan@community.haskell.org", author = "Don Stewart, Duncan Coutts", stability = "", homepage = "http://www.cse.unsw.edu.au/~dons/fps.html", pkgUrl = "", synopsis = "Fast, packed, strict and lazy byte arrays with a list interface", description = "A time and space-efficient implementation of byte vectors using\npacked Word8 arrays, suitable for high performance use, both in terms\nof large data quantities, or high speed requirements. Byte vectors\nare encoded as strict 'Word8' arrays of bytes, and lazy lists of\nstrict chunks, held in a 'ForeignPtr', and can be passed between C\nand Haskell with little effort.\n\nTest coverage data for this library is available at:\n<http://code.haskell.org/~dons/tests/bytestring/hpc_index.html>", category = "Data", exposed = True, exposedModules = [ModuleName ["Data","ByteString"],ModuleName ["Data","ByteString","Char8"],ModuleName ["Data","ByteString","Unsafe"],ModuleName ["Data","ByteString","Internal"],ModuleName ["Data","ByteString","Lazy"],ModuleName ["Data","ByteString","Lazy","Char8"],ModuleName ["Data","ByteString","Lazy","Internal"],ModuleName ["Data","ByteString","Fusion"]], hiddenModules = [], trusted = False, importDirs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\bytestring-0.9.2.1"], libraryDirs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\bytestring-0.9.2.1"], hsLibraries = ["HSbytestring-0.9.2.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\bytestring-0.9.2.1\\include"], includes = ["fpstring.h"], depends = [InstalledPackageId "base-4.5.0.0-597748f6f53a7442bcae283373264bb6",InstalledPackageId "ghc-prim-0.2.0.0-060ce16c8998fd251a77ecf9e6561c86"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib/../doc/html/libraries/bytestring-0.9.2.1\\bytestring.haddock"], haddockHTMLs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib/../doc/html/libraries/bytestring-0.9.2.1"]}),(InstalledPackageId "containers-0.4.2.1-7c54595400348f577b3b4a45691c5afd",InstalledPackageInfo {installedPackageId = InstalledPackageId "containers-0.4.2.1-7c54595400348f577b3b4a45691c5afd", sourcePackageId = PackageIdentifier {pkgName = PackageName "containers", pkgVersion = Version {versionBranch = [0,4,2,1], versionTags = []}}, license = BSD3, copyright = "", maintainer = "fox@ucw.cz", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "Assorted concrete container types", description = "This package contains efficient general-purpose implementations\nof various basic immutable container types.  The declared cost of\neach operation is either worst-case or amortized, but remains\nvalid even if structures are shared.", category = "Data Structures", exposed = True, exposedModules = [ModuleName ["Data","Graph"],ModuleName ["Data","Sequence"],ModuleName ["Data","Tree"],ModuleName ["Data","IntMap"],ModuleName ["Data","IntSet"],ModuleName ["Data","Map"],ModuleName ["Data","Set"]], hiddenModules = [], trusted = False, importDirs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\containers-0.4.2.1"], libraryDirs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\containers-0.4.2.1"], hsLibraries = ["HScontainers-0.4.2.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "array-0.4.0.0-3cf1bc3f5cd0078adea24752c18081b9",InstalledPackageId "base-4.5.0.0-597748f6f53a7442bcae283373264bb6",InstalledPackageId "deepseq-1.3.0.0-6c19ec61ee16184ee322c1614ab60f0e"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib/../doc/html/libraries/containers-0.4.2.1\\containers.haddock"], haddockHTMLs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib/../doc/html/libraries/containers-0.4.2.1"]}),(InstalledPackageId "deepseq-1.3.0.0-6c19ec61ee16184ee322c1614ab60f0e",InstalledPackageInfo {installedPackageId = InstalledPackageId "deepseq-1.3.0.0-6c19ec61ee16184ee322c1614ab60f0e", sourcePackageId = PackageIdentifier {pkgName = PackageName "deepseq", pkgVersion = Version {versionBranch = [1,3,0,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "Deep evaluation of data structures", description = "This package provides methods for fully evaluating data structures\n(\\\"deep evaluation\\\"). Deep evaluation is often used for adding\nstrictness to a program, e.g. in order to force pending exceptions,\nremove space leaks, or force lazy I/O to happen. It is also useful\nin parallel programs, to ensure pending work does not migrate to the\nwrong thread.\n\nThe primary use of this package is via the 'deepseq' function, a\n\\\"deep\\\" version of 'seq'. It is implemented on top of an 'NFData'\ntypeclass (\\\"Normal Form Data\\\", data structures with no unevaluated\ncomponents) which defines strategies for fully evaluating different\ndata types.\n", category = "Control", exposed = True, exposedModules = [ModuleName ["Control","DeepSeq"]], hiddenModules = [], trusted = False, importDirs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\deepseq-1.3.0.0"], libraryDirs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\deepseq-1.3.0.0"], hsLibraries = ["HSdeepseq-1.3.0.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "array-0.4.0.0-3cf1bc3f5cd0078adea24752c18081b9",InstalledPackageId "base-4.5.0.0-597748f6f53a7442bcae283373264bb6"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib/../doc/html/libraries/deepseq-1.3.0.0\\deepseq.haddock"], haddockHTMLs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib/../doc/html/libraries/deepseq-1.3.0.0"]}),(InstalledPackageId "directory-1.1.0.2-0270278088d4b2588b52cbec49af4cb7",InstalledPackageInfo {installedPackageId = InstalledPackageId "directory-1.1.0.2-0270278088d4b2588b52cbec49af4cb7", sourcePackageId = PackageIdentifier {pkgName = PackageName "directory", pkgVersion = Version {versionBranch = [1,1,0,2], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "library for directory handling", description = "This package provides a library for handling directories.", category = "System", exposed = True, exposedModules = [ModuleName ["System","Directory"]], hiddenModules = [], trusted = False, importDirs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\directory-1.1.0.2"], libraryDirs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\directory-1.1.0.2"], hsLibraries = ["HSdirectory-1.1.0.2"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\directory-1.1.0.2\\include"], includes = ["HsDirectory.h"], depends = [InstalledPackageId "Win32-2.2.2.0-2a213fd84250935e110f763f480534bd",InstalledPackageId "base-4.5.0.0-597748f6f53a7442bcae283373264bb6",InstalledPackageId "filepath-1.3.0.0-a0928db5e84f98f74207b69b18d7b311",InstalledPackageId "old-time-1.1.0.0-7b2e123ada736534f8119498399ea8c8"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib/../doc/html/libraries/directory-1.1.0.2\\directory.haddock"], haddockHTMLs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib/../doc/html/libraries/directory-1.1.0.2"]}),(InstalledPackageId "extensible-exceptions-0.1.1.4-d27a1ac47e54880cae007cceceb41580",InstalledPackageInfo {installedPackageId = InstalledPackageId "extensible-exceptions-0.1.1.4-d27a1ac47e54880cae007cceceb41580", sourcePackageId = PackageIdentifier {pkgName = PackageName "extensible-exceptions", pkgVersion = Version {versionBranch = [0,1,1,4], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "Extensible exceptions", description = "This package provides extensible exceptions for both new and\nold versions of GHC (i.e., < 6.10).", category = "Control", exposed = True, exposedModules = [ModuleName ["Control","Exception","Extensible"]], hiddenModules = [], trusted = False, importDirs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\extensible-exceptions-0.1.1.4"], libraryDirs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\extensible-exceptions-0.1.1.4"], hsLibraries = ["HSextensible-exceptions-0.1.1.4"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-4.5.0.0-597748f6f53a7442bcae283373264bb6"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib/../doc/html/libraries/extensible-exceptions-0.1.1.4\\extensible-exceptions.haddock"], haddockHTMLs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib/../doc/html/libraries/extensible-exceptions-0.1.1.4"]}),(InstalledPackageId "filepath-1.3.0.0-a0928db5e84f98f74207b69b18d7b311",InstalledPackageInfo {installedPackageId = InstalledPackageId "filepath-1.3.0.0-a0928db5e84f98f74207b69b18d7b311", sourcePackageId = PackageIdentifier {pkgName = PackageName "filepath", pkgVersion = Version {versionBranch = [1,3,0,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "", author = "Neil Mitchell", stability = "", homepage = "http://www-users.cs.york.ac.uk/~ndm/filepath/", pkgUrl = "", synopsis = "Library for manipulating FilePaths in a cross platform way.", description = "", category = "System", exposed = True, exposedModules = [ModuleName ["System","FilePath"],ModuleName ["System","FilePath","Posix"],ModuleName ["System","FilePath","Windows"]], hiddenModules = [], trusted = False, importDirs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\filepath-1.3.0.0"], libraryDirs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\filepath-1.3.0.0"], hsLibraries = ["HSfilepath-1.3.0.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-4.5.0.0-597748f6f53a7442bcae283373264bb6"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib/../doc/html/libraries/filepath-1.3.0.0\\filepath.haddock"], haddockHTMLs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib/../doc/html/libraries/filepath-1.3.0.0"]}),(InstalledPackageId "ghc-prim-0.2.0.0-060ce16c8998fd251a77ecf9e6561c86",InstalledPackageInfo {installedPackageId = InstalledPackageId "ghc-prim-0.2.0.0-060ce16c8998fd251a77ecf9e6561c86", sourcePackageId = PackageIdentifier {pkgName = PackageName "ghc-prim", pkgVersion = Version {versionBranch = [0,2,0,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "GHC primitives", description = "GHC primitives.", category = "", exposed = True, exposedModules = [ModuleName ["GHC","Prim"],ModuleName ["GHC","Classes"],ModuleName ["GHC","CString"],ModuleName ["GHC","Debug"],ModuleName ["GHC","Generics"],ModuleName ["GHC","Magic"],ModuleName ["GHC","PrimopWrappers"],ModuleName ["GHC","IntWord64"],ModuleName ["GHC","Tuple"],ModuleName ["GHC","Types"]], hiddenModules = [], trusted = False, importDirs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\ghc-prim-0.2.0.0"], libraryDirs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\ghc-prim-0.2.0.0"], hsLibraries = ["HSghc-prim-0.2.0.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "builtin_rts"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib/../doc/html/libraries/ghc-prim-0.2.0.0\\ghc-prim.haddock"], haddockHTMLs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib/../doc/html/libraries/ghc-prim-0.2.0.0"]}),(InstalledPackageId "integer-gmp-0.4.0.0-ec87c5d9609a1d46da031ef5d51c4f79",InstalledPackageInfo {installedPackageId = InstalledPackageId "integer-gmp-0.4.0.0-ec87c5d9609a1d46da031ef5d51c4f79", sourcePackageId = PackageIdentifier {pkgName = PackageName "integer-gmp", pkgVersion = Version {versionBranch = [0,4,0,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "Integer library based on GMP", description = "This package contains an Integer library based on GMP.", category = "", exposed = True, exposedModules = [ModuleName ["GHC","Integer"],ModuleName ["GHC","Integer","GMP","Internals"],ModuleName ["GHC","Integer","GMP","Prim"],ModuleName ["GHC","Integer","Logarithms"],ModuleName ["GHC","Integer","Logarithms","Internals"]], hiddenModules = [ModuleName ["GHC","Integer","Type"]], trusted = False, importDirs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\integer-gmp-0.4.0.0"], libraryDirs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\integer-gmp-0.4.0.0"], hsLibraries = ["HSinteger-gmp-0.4.0.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "ghc-prim-0.2.0.0-060ce16c8998fd251a77ecf9e6561c86"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib/../doc/html/libraries/integer-gmp-0.4.0.0\\integer-gmp.haddock"], haddockHTMLs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib/../doc/html/libraries/integer-gmp-0.4.0.0"]}),(InstalledPackageId "mtl-2.1.1-87121149c5eb4fc03f06f5894ea4ac0c",InstalledPackageInfo {installedPackageId = InstalledPackageId "mtl-2.1.1-87121149c5eb4fc03f06f5894ea4ac0c", sourcePackageId = PackageIdentifier {pkgName = PackageName "mtl", pkgVersion = Version {versionBranch = [2,1,1], versionTags = []}}, license = BSD3, copyright = "", maintainer = "Edward Kmett <ekmett@gmail.com>", author = "Andy Gill", stability = "", homepage = "", pkgUrl = "", synopsis = "Monad classes, using functional dependencies", description = "Monad classes using functional dependencies, with instances\nfor various monad transformers, inspired by the paper\n/Functional Programming with Overloading and Higher-Order Polymorphism/,\nby Mark P Jones, in /Advanced School of Functional Programming/, 1995\n(<http://web.cecs.pdx.edu/~mpj/pubs/springschool.html>).", category = "Control", exposed = True, exposedModules = [ModuleName ["Control","Monad","Cont"],ModuleName ["Control","Monad","Cont","Class"],ModuleName ["Control","Monad","Error"],ModuleName ["Control","Monad","Error","Class"],ModuleName ["Control","Monad","Identity"],ModuleName ["Control","Monad","List"],ModuleName ["Control","Monad","RWS"],ModuleName ["Control","Monad","RWS","Class"],ModuleName ["Control","Monad","RWS","Lazy"],ModuleName ["Control","Monad","RWS","Strict"],ModuleName ["Control","Monad","Reader"],ModuleName ["Control","Monad","Reader","Class"],ModuleName ["Control","Monad","State"],ModuleName ["Control","Monad","State","Class"],ModuleName ["Control","Monad","State","Lazy"],ModuleName ["Control","Monad","State","Strict"],ModuleName ["Control","Monad","Trans"],ModuleName ["Control","Monad","Writer"],ModuleName ["Control","Monad","Writer","Class"],ModuleName ["Control","Monad","Writer","Lazy"],ModuleName ["Control","Monad","Writer","Strict"]], hiddenModules = [], trusted = False, importDirs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\extralibs\\mtl-2.1.1\\ghc-7.4.1"], libraryDirs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\extralibs\\mtl-2.1.1\\ghc-7.4.1"], hsLibraries = ["HSmtl-2.1.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-4.5.0.0-597748f6f53a7442bcae283373264bb6",InstalledPackageId "transformers-0.3.0.0-e822211489f7414505ab945e95cef411"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\extralibs\\doc\\mtl-2.1.1\\html\\mtl.haddock"], haddockHTMLs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\extralibs\\doc\\mtl-2.1.1\\html"]}),(InstalledPackageId "old-locale-1.0.0.4-29bd50ed2bb4a20928338f52e4ab1b71",InstalledPackageInfo {installedPackageId = InstalledPackageId "old-locale-1.0.0.4-29bd50ed2bb4a20928338f52e4ab1b71", sourcePackageId = PackageIdentifier {pkgName = PackageName "old-locale", pkgVersion = Version {versionBranch = [1,0,0,4], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "locale library", description = "This package provides the old locale library.\nFor new code, the new locale library is recommended.", category = "System", exposed = True, exposedModules = [ModuleName ["System","Locale"]], hiddenModules = [], trusted = False, importDirs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\old-locale-1.0.0.4"], libraryDirs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\old-locale-1.0.0.4"], hsLibraries = ["HSold-locale-1.0.0.4"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-4.5.0.0-597748f6f53a7442bcae283373264bb6"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib/../doc/html/libraries/old-locale-1.0.0.4\\old-locale.haddock"], haddockHTMLs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib/../doc/html/libraries/old-locale-1.0.0.4"]}),(InstalledPackageId "old-time-1.1.0.0-7b2e123ada736534f8119498399ea8c8",InstalledPackageInfo {installedPackageId = InstalledPackageId "old-time-1.1.0.0-7b2e123ada736534f8119498399ea8c8", sourcePackageId = PackageIdentifier {pkgName = PackageName "old-time", pkgVersion = Version {versionBranch = [1,1,0,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "Time library", description = "This package provides the old time library.\nFor new code, the new time library is recommended.", category = "System", exposed = True, exposedModules = [ModuleName ["System","Time"]], hiddenModules = [], trusted = False, importDirs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\old-time-1.1.0.0"], libraryDirs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\old-time-1.1.0.0"], hsLibraries = ["HSold-time-1.1.0.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\old-time-1.1.0.0\\include"], includes = ["HsTime.h"], depends = [InstalledPackageId "base-4.5.0.0-597748f6f53a7442bcae283373264bb6",InstalledPackageId "old-locale-1.0.0.4-29bd50ed2bb4a20928338f52e4ab1b71"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib/../doc/html/libraries/old-time-1.1.0.0\\old-time.haddock"], haddockHTMLs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib/../doc/html/libraries/old-time-1.1.0.0"]}),(InstalledPackageId "stm-2.3-2735f77d3e207163ae60f86094d82cd7",InstalledPackageInfo {installedPackageId = InstalledPackageId "stm-2.3-2735f77d3e207163ae60f86094d82cd7", sourcePackageId = PackageIdentifier {pkgName = PackageName "stm", pkgVersion = Version {versionBranch = [2,3], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "Software Transactional Memory", description = "A modular composable concurrency abstraction.", category = "Concurrency", exposed = True, exposedModules = [ModuleName ["Control","Concurrent","STM"],ModuleName ["Control","Concurrent","STM","TArray"],ModuleName ["Control","Concurrent","STM","TVar"],ModuleName ["Control","Concurrent","STM","TChan"],ModuleName ["Control","Concurrent","STM","TMVar"],ModuleName ["Control","Monad","STM"]], hiddenModules = [ModuleName ["Control","Sequential","STM"]], trusted = False, importDirs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\extralibs\\stm-2.3\\ghc-7.4.1"], libraryDirs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\extralibs\\stm-2.3\\ghc-7.4.1"], hsLibraries = ["HSstm-2.3"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "array-0.4.0.0-3cf1bc3f5cd0078adea24752c18081b9",InstalledPackageId "base-4.5.0.0-597748f6f53a7442bcae283373264bb6"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\extralibs\\doc\\stm-2.3\\html\\stm.haddock"], haddockHTMLs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\extralibs\\doc\\stm-2.3\\html"]}),(InstalledPackageId "text-0.11.2.0-b2986f5478f0efa626f8ba0494ed9670",InstalledPackageInfo {installedPackageId = InstalledPackageId "text-0.11.2.0-b2986f5478f0efa626f8ba0494ed9670", sourcePackageId = PackageIdentifier {pkgName = PackageName "text", pkgVersion = Version {versionBranch = [0,11,2,0], versionTags = []}}, license = BSD3, copyright = "2009-2011 Bryan O'Sullivan, 2008-2009 Tom Harper", maintainer = "Bryan O'Sullivan <bos@serpentine.com>", author = "Bryan O'Sullivan <bos@serpentine.com>", stability = "", homepage = "https://github.com/bos/text", pkgUrl = "", synopsis = "An efficient packed Unicode text type.", description = "\nAn efficient packed, immutable Unicode text type (both strict and\nlazy), with a powerful loop fusion optimization framework.\n\nThe 'Text' type represents Unicode character strings, in a time and\nspace-efficient manner. This package provides text processing\ncapabilities that are optimized for performance critical use, both\nin terms of large data quantities and high speed.\n\nThe 'Text' type provides character-encoding, type-safe case\nconversion via whole-string case conversion functions. It also\nprovides a range of functions for converting 'Text' values to and from\n'ByteStrings', using several standard encodings.\n\nEfficient locale-sensitive support for text IO is also supported.\n\nThese modules are intended to be imported qualified, to avoid name\nclashes with Prelude functions, e.g.\n\n> import qualified Data.Text as T\n\nTo use an extended and very rich family of functions for working\nwith Unicode text (including normalization, regular expressions,\nnon-standard encodings, text breaking, and locales), see\nthe @text-icu@ package:\n<http://hackage.haskell.org/package/text-icu>\n\n&#8212;&#8212; RELEASE NOTES &#8212;&#8212;\n\nChanges in 0.11.2.0:\n\n* String literals are now converted directly from the format in\nwhich GHC stores them into 'Text', without an intermediate\ntransformation through 'String', and without inlining of\nconversion code at each site where a string literal is declared.\n", category = "Data, Text", exposed = True, exposedModules = [ModuleName ["Data","Text"],ModuleName ["Data","Text","Array"],ModuleName ["Data","Text","Encoding"],ModuleName ["Data","Text","Encoding","Error"],ModuleName ["Data","Text","Foreign"],ModuleName ["Data","Text","IO"],ModuleName ["Data","Text","Internal"],ModuleName ["Data","Text","Lazy"],ModuleName ["Data","Text","Lazy","Builder"],ModuleName ["Data","Text","Lazy","Builder","Int"],ModuleName ["Data","Text","Lazy","Builder","RealFloat"],ModuleName ["Data","Text","Lazy","Encoding"],ModuleName ["Data","Text","Lazy","IO"],ModuleName ["Data","Text","Lazy","Internal"],ModuleName ["Data","Text","Lazy","Read"],ModuleName ["Data","Text","Read"]], hiddenModules = [ModuleName ["Data","Text","Encoding","Fusion"],ModuleName ["Data","Text","Encoding","Fusion","Common"],ModuleName ["Data","Text","Encoding","Utf16"],ModuleName ["Data","Text","Encoding","Utf32"],ModuleName ["Data","Text","Encoding","Utf8"],ModuleName ["Data","Text","Fusion"],ModuleName ["Data","Text","Fusion","CaseMapping"],ModuleName ["Data","Text","Fusion","Common"],ModuleName ["Data","Text","Fusion","Internal"],ModuleName ["Data","Text","Fusion","Size"],ModuleName ["Data","Text","IO","Internal"],ModuleName ["Data","Text","Lazy","Builder","Functions"],ModuleName ["Data","Text","Lazy","Builder","RealFloat","Functions"],ModuleName ["Data","Text","Lazy","Encoding","Fusion"],ModuleName ["Data","Text","Lazy","Fusion"],ModuleName ["Data","Text","Lazy","Search"],ModuleName ["Data","Text","Private"],ModuleName ["Data","Text","Search"],ModuleName ["Data","Text","Unsafe"],ModuleName ["Data","Text","Unsafe","Base"],ModuleName ["Data","Text","UnsafeChar"],ModuleName ["Data","Text","UnsafeShift"],ModuleName ["Data","Text","Util"]], trusted = False, importDirs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\extralibs\\text-0.11.2.0\\ghc-7.4.1"], libraryDirs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\extralibs\\text-0.11.2.0\\ghc-7.4.1"], hsLibraries = ["HStext-0.11.2.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "array-0.4.0.0-3cf1bc3f5cd0078adea24752c18081b9",InstalledPackageId "base-4.5.0.0-597748f6f53a7442bcae283373264bb6",InstalledPackageId "bytestring-0.9.2.1-df82064cddbf74693df4e042927e015e",InstalledPackageId "deepseq-1.3.0.0-6c19ec61ee16184ee322c1614ab60f0e",InstalledPackageId "ghc-prim-0.2.0.0-060ce16c8998fd251a77ecf9e6561c86",InstalledPackageId "integer-gmp-0.4.0.0-ec87c5d9609a1d46da031ef5d51c4f79"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\extralibs\\doc\\text-0.11.2.0\\html\\text.haddock"], haddockHTMLs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\extralibs\\doc\\text-0.11.2.0\\html"]}),(InstalledPackageId "transformers-0.3.0.0-e822211489f7414505ab945e95cef411",InstalledPackageInfo {installedPackageId = InstalledPackageId "transformers-0.3.0.0-e822211489f7414505ab945e95cef411", sourcePackageId = PackageIdentifier {pkgName = PackageName "transformers", pkgVersion = Version {versionBranch = [0,3,0,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "Ross Paterson <ross@soi.city.ac.uk>", author = "Andy Gill, Ross Paterson", stability = "", homepage = "", pkgUrl = "", synopsis = "Concrete functor and monad transformers", description = "A portable library of functor and monad transformers, inspired by\nthe paper \\\"Functional Programming with Overloading and Higher-Order\nPolymorphism\\\", by Mark P Jones,\nin /Advanced School of Functional Programming/, 1995\n(<http://web.cecs.pdx.edu/~mpj/pubs/springschool.html>).\n\nThis package contains:\n\n* the monad transformer class (in \"Control.Monad.Trans.Class\")\n\n* concrete functor and monad transformers, each with associated\noperations and functions to lift operations associated with other\ntransformers.\n\nIt can be used on its own in portable Haskell code, or with the monad\nclasses in the @mtl@ or @monads-tf@ packages, which automatically\nlift operations introduced by monad transformers through other\ntransformers.", category = "Control", exposed = True, exposedModules = [ModuleName ["Control","Applicative","Backwards"],ModuleName ["Control","Applicative","Lift"],ModuleName ["Control","Monad","IO","Class"],ModuleName ["Control","Monad","Trans","Class"],ModuleName ["Control","Monad","Trans","Cont"],ModuleName ["Control","Monad","Trans","Error"],ModuleName ["Control","Monad","Trans","Identity"],ModuleName ["Control","Monad","Trans","List"],ModuleName ["Control","Monad","Trans","Maybe"],ModuleName ["Control","Monad","Trans","Reader"],ModuleName ["Control","Monad","Trans","RWS"],ModuleName ["Control","Monad","Trans","RWS","Lazy"],ModuleName ["Control","Monad","Trans","RWS","Strict"],ModuleName ["Control","Monad","Trans","State"],ModuleName ["Control","Monad","Trans","State","Lazy"],ModuleName ["Control","Monad","Trans","State","Strict"],ModuleName ["Control","Monad","Trans","Writer"],ModuleName ["Control","Monad","Trans","Writer","Lazy"],ModuleName ["Control","Monad","Trans","Writer","Strict"],ModuleName ["Data","Functor","Compose"],ModuleName ["Data","Functor","Constant"],ModuleName ["Data","Functor","Identity"],ModuleName ["Data","Functor","Product"],ModuleName ["Data","Functor","Reverse"]], hiddenModules = [], trusted = False, importDirs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\extralibs\\transformers-0.3.0.0\\ghc-7.4.1"], libraryDirs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\extralibs\\transformers-0.3.0.0\\ghc-7.4.1"], hsLibraries = ["HStransformers-0.3.0.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-4.5.0.0-597748f6f53a7442bcae283373264bb6"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\extralibs\\doc\\transformers-0.3.0.0\\html\\transformers.haddock"], haddockHTMLs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\extralibs\\doc\\transformers-0.3.0.0\\html"]})]) (fromList [(PackageName "MonadCatchIO-mtl",fromList [(Version {versionBranch = [0,3,0,4], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "MonadCatchIO-mtl-0.3.0.4-ab5f19ece655cdbb3251a0e3dba8205b", sourcePackageId = PackageIdentifier {pkgName = PackageName "MonadCatchIO-mtl", pkgVersion = Version {versionBranch = [0,3,0,4], versionTags = []}}, license = BSD3, copyright = "", maintainer = "jcpetruzza@gmail.com", author = "", stability = "", homepage = "http://darcsden.com/jcpetruzza/MonadCatchIO-mtl", pkgUrl = "", synopsis = "Monad-transformer version of the Control.Exception module", description = "Provides a monad-transformer version of the @Control.Exception.catch@\nfunction. For this, it defines the @MonadCatchIO@ class, a subset of\n@MonadIO@. It defines proper instances for most monad transformers in\nthe 'mtl' library.", category = "Control", exposed = True, exposedModules = [ModuleName ["Control","Monad","CatchIO"]], hiddenModules = [], trusted = False, importDirs = ["C:\\Users\\agocorona\\AppData\\Roaming\\cabal\\MonadCatchIO-mtl-0.3.0.4\\ghc-7.4.1"], libraryDirs = ["C:\\Users\\agocorona\\AppData\\Roaming\\cabal\\MonadCatchIO-mtl-0.3.0.4\\ghc-7.4.1"], hsLibraries = ["HSMonadCatchIO-mtl-0.3.0.4"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-4.5.0.0-597748f6f53a7442bcae283373264bb6",InstalledPackageId "extensible-exceptions-0.1.1.4-d27a1ac47e54880cae007cceceb41580",InstalledPackageId "mtl-2.1.1-87121149c5eb4fc03f06f5894ea4ac0c"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Users\\agocorona\\AppData\\Roaming\\cabal\\doc\\MonadCatchIO-mtl-0.3.0.4\\html\\MonadCatchIO-mtl.haddock"], haddockHTMLs = ["C:\\Users\\agocorona\\AppData\\Roaming\\cabal\\doc\\MonadCatchIO-mtl-0.3.0.4\\html"]}])]),(PackageName "RefSerialize",fromList [(Version {versionBranch = [0,2,8,1], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "RefSerialize-0.2.8.1-80a3dbab8a08c01d64c102718a393704", sourcePackageId = PackageIdentifier {pkgName = PackageName "RefSerialize", pkgVersion = Version {versionBranch = [0,2,8,1], versionTags = []}}, license = BSD3, copyright = "", maintainer = "agocorona@gmail.com", author = "Alberto G\243mez Corona", stability = "", homepage = "", pkgUrl = "", synopsis = "Write to and read from ByteStrings maintaining internal memory references", description = "Read, Show and Binary instances do not check for internal data references to the same address.\nAs a result, the data is duplicated when serialized. This is a waste of space in the filesystem\nand  also a waste of serialization time. but the worst consequence is that, when the serialized data is read,\nit allocates multiple copies for the same object when referenced multiple times. Because multiple referenced\ndata is very typical in a pure language such is Haskell, this means that the resulting data loose the beatiful\neconomy of space and processing time that referential transparency permits.\n\nSee \"Data.RefSerialize\" for details", category = "Parsing, Data, Database", exposed = True, exposedModules = [ModuleName ["Data","RefSerialize"],ModuleName ["Data","RefSerialize","Parser"],ModuleName ["Data","RefSerialize","Serialize"]], hiddenModules = [], trusted = False, importDirs = ["C:\\Users\\agocorona\\AppData\\Roaming\\cabal\\RefSerialize-0.2.8.1\\ghc-7.4.1"], libraryDirs = ["C:\\Users\\agocorona\\AppData\\Roaming\\cabal\\RefSerialize-0.2.8.1\\ghc-7.4.1"], hsLibraries = ["HSRefSerialize-0.2.8.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-4.5.0.0-597748f6f53a7442bcae283373264bb6",InstalledPackageId "binary-0.5.1.0-75e3c50586498e97c9eeb9990bbdf80d",InstalledPackageId "bytestring-0.9.2.1-df82064cddbf74693df4e042927e015e",InstalledPackageId "containers-0.4.2.1-7c54595400348f577b3b4a45691c5afd"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Users\\agocorona\\AppData\\Roaming\\cabal\\doc\\RefSerialize-0.2.8.1\\html\\RefSerialize.haddock"], haddockHTMLs = ["C:\\Users\\agocorona\\AppData\\Roaming\\cabal\\doc\\RefSerialize-0.2.8.1\\html"]}])]),(PackageName "TCache",fromList [(Version {versionBranch = [0,10,0,1], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "TCache-0.10.0.1-88046934453fd6e87b1ed30914546523", sourcePackageId = PackageIdentifier {pkgName = PackageName "TCache", pkgVersion = Version {versionBranch = [0,10,0,1], versionTags = []}}, license = BSD3, copyright = "", maintainer = "agocorona@gmail.com", author = "Alberto G\243mez Corona", stability = "", homepage = "", pkgUrl = "", synopsis = "A Transactional cache with user-defined persistence", description = "TCache is a transactional cache with configurable persitence. It allows conventional\nSTM transactions for objects that syncronize  with\ntheir user defined storages.\nState in memory and into permanent storage is transactionally coherent.\n\nThe package implements serializable STM references, access by key and by record field value, triggers,\nfull text and field indexation, default serialization and a query language based on record fields\n\nThis version add memoization and a persistent and transactional collection/queue\n\nSee \"Data.TCache\" for details", category = "Data, Database", exposed = True, exposedModules = [ModuleName ["Data","TCache"],ModuleName ["Data","TCache","DefaultPersistence"],ModuleName ["Data","TCache","Defs"],ModuleName ["Data","TCache","IResource"],ModuleName ["Data","TCache","IndexQuery"],ModuleName ["Data","TCache","IndexText"],ModuleName ["Data","TCache","Memoization"],ModuleName ["Data","TCache","Triggers"],ModuleName ["Data","Persistent","Collection"]], hiddenModules = [], trusted = False, importDirs = ["C:\\Users\\agocorona\\AppData\\Roaming\\cabal\\TCache-0.10.0.1\\ghc-7.4.1"], libraryDirs = ["C:\\Users\\agocorona\\AppData\\Roaming\\cabal\\TCache-0.10.0.1\\ghc-7.4.1"], hsLibraries = ["HSTCache-0.10.0.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "RefSerialize-0.2.8.1-80a3dbab8a08c01d64c102718a393704",InstalledPackageId "base-4.5.0.0-597748f6f53a7442bcae283373264bb6",InstalledPackageId "bytestring-0.9.2.1-df82064cddbf74693df4e042927e015e",InstalledPackageId "containers-0.4.2.1-7c54595400348f577b3b4a45691c5afd",InstalledPackageId "directory-1.1.0.2-0270278088d4b2588b52cbec49af4cb7",InstalledPackageId "mtl-2.1.1-87121149c5eb4fc03f06f5894ea4ac0c",InstalledPackageId "old-time-1.1.0.0-7b2e123ada736534f8119498399ea8c8",InstalledPackageId "stm-2.3-2735f77d3e207163ae60f86094d82cd7",InstalledPackageId "text-0.11.2.0-b2986f5478f0efa626f8ba0494ed9670"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Users\\agocorona\\AppData\\Roaming\\cabal\\doc\\TCache-0.10.0.1\\html\\TCache.haddock"], haddockHTMLs = ["C:\\Users\\agocorona\\AppData\\Roaming\\cabal\\doc\\TCache-0.10.0.1\\html"]}])]),(PackageName "Win32",fromList [(Version {versionBranch = [2,2,2,0], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "Win32-2.2.2.0-2a213fd84250935e110f763f480534bd", sourcePackageId = PackageIdentifier {pkgName = PackageName "Win32", pkgVersion = Version {versionBranch = [2,2,2,0], versionTags = []}}, license = BSD3, copyright = "Alastair Reid, 1999-2003", maintainer = "Bryan O'Sullivan <bos@serpentine.com>", author = "Alastair Reid", stability = "", homepage = "https://github.com/haskell/win32", pkgUrl = "", synopsis = "A binding to part of the Win32 library", description = "A binding to part of the Win32 library.", category = "System, Graphics", exposed = True, exposedModules = [ModuleName ["Graphics","Win32","GDI"],ModuleName ["Graphics","Win32","GDI","Bitmap"],ModuleName ["Graphics","Win32","GDI","Brush"],ModuleName ["Graphics","Win32","GDI","Clip"],ModuleName ["Graphics","Win32","GDI","Font"],ModuleName ["Graphics","Win32","GDI","Graphics2D"],ModuleName ["Graphics","Win32","GDI","HDC"],ModuleName ["Graphics","Win32","GDI","Palette"],ModuleName ["Graphics","Win32","GDI","Path"],ModuleName ["Graphics","Win32","GDI","Pen"],ModuleName ["Graphics","Win32","GDI","Region"],ModuleName ["Graphics","Win32","GDI","Types"],ModuleName ["Graphics","Win32"],ModuleName ["Graphics","Win32","Control"],ModuleName ["Graphics","Win32","Dialogue"],ModuleName ["Graphics","Win32","Icon"],ModuleName ["Graphics","Win32","Key"],ModuleName ["Graphics","Win32","Menu"],ModuleName ["Graphics","Win32","Message"],ModuleName ["Graphics","Win32","Misc"],ModuleName ["Graphics","Win32","Resource"],ModuleName ["Graphics","Win32","Window"],ModuleName ["System","Win32"],ModuleName ["System","Win32","DebugApi"],ModuleName ["System","Win32","DLL"],ModuleName ["System","Win32","File"],ModuleName ["System","Win32","FileMapping"],ModuleName ["System","Win32","Info"],ModuleName ["System","Win32","Mem"],ModuleName ["System","Win32","NLS"],ModuleName ["System","Win32","Process"],ModuleName ["System","Win32","Registry"],ModuleName ["System","Win32","SimpleMAPI"],ModuleName ["System","Win32","Time"],ModuleName ["System","Win32","Console"],ModuleName ["System","Win32","Security"],ModuleName ["System","Win32","Types"],ModuleName ["System","Win32","Shell"]], hiddenModules = [], trusted = False, importDirs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\Win32-2.2.2.0"], libraryDirs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\Win32-2.2.2.0"], hsLibraries = ["HSWin32-2.2.2.0"], extraLibraries = ["user32","gdi32","winmm","advapi32","shell32","shfolder"], extraGHCiLibraries = [], includeDirs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\Win32-2.2.2.0\\include"], includes = ["HsWin32.h","HsGDI.h","WndProc.h"], depends = [InstalledPackageId "base-4.5.0.0-597748f6f53a7442bcae283373264bb6",InstalledPackageId "bytestring-0.9.2.1-df82064cddbf74693df4e042927e015e"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib/../doc/html/libraries/Win32-2.2.2.0\\Win32.haddock"], haddockHTMLs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib/../doc/html/libraries/Win32-2.2.2.0"]}])]),(PackageName "array",fromList [(Version {versionBranch = [0,4,0,0], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "array-0.4.0.0-3cf1bc3f5cd0078adea24752c18081b9", sourcePackageId = PackageIdentifier {pkgName = PackageName "array", pkgVersion = Version {versionBranch = [0,4,0,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "Mutable and immutable arrays", description = "This package defines the classes @IArray@ of immutable arrays and\n@MArray@ of arrays mutable within appropriate monads, as well as\nsome instances of these classes.", category = "Data Structures", exposed = True, exposedModules = [ModuleName ["Data","Array","Base"],ModuleName ["Data","Array","IArray"],ModuleName ["Data","Array","IO"],ModuleName ["Data","Array","IO","Safe"],ModuleName ["Data","Array","IO","Internals"],ModuleName ["Data","Array","MArray"],ModuleName ["Data","Array","MArray","Safe"],ModuleName ["Data","Array","ST"],ModuleName ["Data","Array","ST","Safe"],ModuleName ["Data","Array","Storable"],ModuleName ["Data","Array","Storable","Safe"],ModuleName ["Data","Array","Storable","Internals"],ModuleName ["Data","Array","Unboxed"],ModuleName ["Data","Array","Unsafe"],ModuleName ["Data","Array"]], hiddenModules = [], trusted = False, importDirs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\array-0.4.0.0"], libraryDirs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\array-0.4.0.0"], hsLibraries = ["HSarray-0.4.0.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-4.5.0.0-597748f6f53a7442bcae283373264bb6"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib/../doc/html/libraries/array-0.4.0.0\\array.haddock"], haddockHTMLs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib/../doc/html/libraries/array-0.4.0.0"]}])]),(PackageName "base",fromList [(Version {versionBranch = [4,5,0,0], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "base-4.5.0.0-597748f6f53a7442bcae283373264bb6", sourcePackageId = PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [4,5,0,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "Basic libraries", description = "This package contains the Prelude and its support libraries,\nand a large collection of useful libraries ranging from data\nstructures to parsing combinators and debugging utilities.", category = "", exposed = True, exposedModules = [ModuleName ["GHC","IO","Encoding","CodePage","Table"],ModuleName ["GHC","Conc","Windows"],ModuleName ["GHC","Windows"],ModuleName ["Foreign","Concurrent"],ModuleName ["GHC","Arr"],ModuleName ["GHC","Base"],ModuleName ["GHC","Conc"],ModuleName ["GHC","Conc","IO"],ModuleName ["GHC","Conc","Signal"],ModuleName ["GHC","Conc","Sync"],ModuleName ["GHC","ConsoleHandler"],ModuleName ["GHC","Constants"],ModuleName ["GHC","Desugar"],ModuleName ["GHC","Enum"],ModuleName ["GHC","Environment"],ModuleName ["GHC","Err"],ModuleName ["GHC","Exception"],ModuleName ["GHC","Exts"],ModuleName ["GHC","Fingerprint"],ModuleName ["GHC","Fingerprint","Type"],ModuleName ["GHC","Float"],ModuleName ["GHC","Float","ConversionUtils"],ModuleName ["GHC","Float","RealFracMethods"],ModuleName ["GHC","Foreign"],ModuleName ["GHC","ForeignPtr"],ModuleName ["GHC","Handle"],ModuleName ["GHC","IO"],ModuleName ["GHC","IO","Buffer"],ModuleName ["GHC","IO","BufferedIO"],ModuleName ["GHC","IO","Device"],ModuleName ["GHC","IO","Encoding"],ModuleName ["GHC","IO","Encoding","CodePage"],ModuleName ["GHC","IO","Encoding","Failure"],ModuleName ["GHC","IO","Encoding","Iconv"],ModuleName ["GHC","IO","Encoding","Latin1"],ModuleName ["GHC","IO","Encoding","Types"],ModuleName ["GHC","IO","Encoding","UTF16"],ModuleName ["GHC","IO","Encoding","UTF32"],ModuleName ["GHC","IO","Encoding","UTF8"],ModuleName ["GHC","IO","Exception"],ModuleName ["GHC","IO","FD"],ModuleName ["GHC","IO","Handle"],ModuleName ["GHC","IO","Handle","FD"],ModuleName ["GHC","IO","Handle","Internals"],ModuleName ["GHC","IO","Handle","Text"],ModuleName ["GHC","IO","Handle","Types"],ModuleName ["GHC","IO","IOMode"],ModuleName ["GHC","IOArray"],ModuleName ["GHC","IOBase"],ModuleName ["GHC","IORef"],ModuleName ["GHC","Int"],ModuleName ["GHC","List"],ModuleName ["GHC","MVar"],ModuleName ["GHC","Num"],ModuleName ["GHC","PArr"],ModuleName ["GHC","Pack"],ModuleName ["GHC","Ptr"],ModuleName ["GHC","Read"],ModuleName ["GHC","Real"],ModuleName ["GHC","ST"],ModuleName ["GHC","Stack"],ModuleName ["GHC","Stats"],ModuleName ["GHC","Show"],ModuleName ["GHC","Stable"],ModuleName ["GHC","Storable"],ModuleName ["GHC","STRef"],ModuleName ["GHC","TopHandler"],ModuleName ["GHC","Unicode"],ModuleName ["GHC","Weak"],ModuleName ["GHC","Word"],ModuleName ["System","Timeout"],ModuleName ["Control","Applicative"],ModuleName ["Control","Arrow"],ModuleName ["Control","Category"],ModuleName ["Control","Concurrent"],ModuleName ["Control","Concurrent","Chan"],ModuleName ["Control","Concurrent","MVar"],ModuleName ["Control","Concurrent","QSem"],ModuleName ["Control","Concurrent","QSemN"],ModuleName ["Control","Concurrent","SampleVar"],ModuleName ["Control","Exception"],ModuleName ["Control","Exception","Base"],ModuleName ["Control","OldException"],ModuleName ["Control","Monad"],ModuleName ["Control","Monad","Fix"],ModuleName ["Control","Monad","Instances"],ModuleName ["Control","Monad","ST"],ModuleName ["Control","Monad","ST","Safe"],ModuleName ["Control","Monad","ST","Unsafe"],ModuleName ["Control","Monad","ST","Lazy"],ModuleName ["Control","Monad","ST","Lazy","Safe"],ModuleName ["Control","Monad","ST","Lazy","Unsafe"],ModuleName ["Control","Monad","ST","Strict"],ModuleName ["Control","Monad","Zip"],ModuleName ["Data","Bits"],ModuleName ["Data","Bool"],ModuleName ["Data","Char"],ModuleName ["Data","Complex"],ModuleName ["Data","Dynamic"],ModuleName ["Data","Either"],ModuleName ["Data","Eq"],ModuleName ["Data","Data"],ModuleName ["Data","Fixed"],ModuleName ["Data","Foldable"],ModuleName ["Data","Function"],ModuleName ["Data","Functor"],ModuleName ["Data","HashTable"],ModuleName ["Data","IORef"],ModuleName ["Data","Int"],ModuleName ["Data","Ix"],ModuleName ["Data","List"],ModuleName ["Data","Maybe"],ModuleName ["Data","Monoid"],ModuleName ["Data","Ord"],ModuleName ["Data","Ratio"],ModuleName ["Data","STRef"],ModuleName ["Data","STRef","Lazy"],ModuleName ["Data","STRef","Strict"],ModuleName ["Data","String"],ModuleName ["Data","Traversable"],ModuleName ["Data","Tuple"],ModuleName ["Data","Typeable"],ModuleName ["Data","Typeable","Internal"],ModuleName ["Data","Unique"],ModuleName ["Data","Version"],ModuleName ["Data","Word"],ModuleName ["Debug","Trace"],ModuleName ["Foreign"],ModuleName ["Foreign","C"],ModuleName ["Foreign","C","Error"],ModuleName ["Foreign","C","String"],ModuleName ["Foreign","C","Types"],ModuleName ["Foreign","ForeignPtr"],ModuleName ["Foreign","ForeignPtr","Safe"],ModuleName ["Foreign","ForeignPtr","Unsafe"],ModuleName ["Foreign","Marshal"],ModuleName ["Foreign","Marshal","Alloc"],ModuleName ["Foreign","Marshal","Array"],ModuleName ["Foreign","Marshal","Error"],ModuleName ["Foreign","Marshal","Pool"],ModuleName ["Foreign","Marshal","Safe"],ModuleName ["Foreign","Marshal","Utils"],ModuleName ["Foreign","Marshal","Unsafe"],ModuleName ["Foreign","Ptr"],ModuleName ["Foreign","Safe"],ModuleName ["Foreign","StablePtr"],ModuleName ["Foreign","Storable"],ModuleName ["Numeric"],ModuleName ["Prelude"],ModuleName ["System","Console","GetOpt"],ModuleName ["System","CPUTime"],ModuleName ["System","Environment"],ModuleName ["System","Exit"],ModuleName ["System","IO"],ModuleName ["System","IO","Error"],ModuleName ["System","IO","Unsafe"],ModuleName ["System","Info"],ModuleName ["System","Mem"],ModuleName ["System","Mem","StableName"],ModuleName ["System","Mem","Weak"],ModuleName ["System","Posix","Internals"],ModuleName ["System","Posix","Types"],ModuleName ["Text","ParserCombinators","ReadP"],ModuleName ["Text","ParserCombinators","ReadPrec"],ModuleName ["Text","Printf"],ModuleName ["Text","Read"],ModuleName ["Text","Read","Lex"],ModuleName ["Text","Show"],ModuleName ["Text","Show","Functions"],ModuleName ["Unsafe","Coerce"]], hiddenModules = [ModuleName ["Control","Monad","ST","Imp"],ModuleName ["Control","Monad","ST","Lazy","Imp"],ModuleName ["Foreign","ForeignPtr","Imp"]], trusted = False, importDirs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\base-4.5.0.0"], libraryDirs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\base-4.5.0.0"], hsLibraries = ["HSbase-4.5.0.0"], extraLibraries = ["wsock32","user32","shell32"], extraGHCiLibraries = [], includeDirs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\base-4.5.0.0\\include"], includes = ["HsBase.h"], depends = [InstalledPackageId "ghc-prim-0.2.0.0-060ce16c8998fd251a77ecf9e6561c86",InstalledPackageId "integer-gmp-0.4.0.0-ec87c5d9609a1d46da031ef5d51c4f79",InstalledPackageId "builtin_rts"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib/../doc/html/libraries/base-4.5.0.0\\base.haddock"], haddockHTMLs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib/../doc/html/libraries/base-4.5.0.0"]}])]),(PackageName "binary",fromList [(Version {versionBranch = [0,5,1,0], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "binary-0.5.1.0-75e3c50586498e97c9eeb9990bbdf80d", sourcePackageId = PackageIdentifier {pkgName = PackageName "binary", pkgVersion = Version {versionBranch = [0,5,1,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "Lennart Kolmodin, Don Stewart <dons@galois.com>", author = "Lennart Kolmodin <kolmodin@gmail.com>", stability = "provisional", homepage = "http://code.haskell.org/binary/", pkgUrl = "", synopsis = "Binary serialisation for Haskell values using lazy ByteStrings", description = "Efficient, pure binary serialisation using lazy ByteStrings.\nHaskell values may be encoded to and from binary formats,\nwritten to disk as binary, or sent over the network.\nSerialisation speeds of over 1 G\\/sec have been observed,\nso this library should be suitable for high performance\nscenarios.", category = "Data, Parsing", exposed = True, exposedModules = [ModuleName ["Data","Binary"],ModuleName ["Data","Binary","Put"],ModuleName ["Data","Binary","Get"],ModuleName ["Data","Binary","Builder"],ModuleName ["Data","Binary","Builder","Internal"]], hiddenModules = [ModuleName ["Data","Binary","Builder","Base"]], trusted = False, importDirs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\binary-0.5.1.0"], libraryDirs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\binary-0.5.1.0"], hsLibraries = ["HSbinary-0.5.1.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "array-0.4.0.0-3cf1bc3f5cd0078adea24752c18081b9",InstalledPackageId "base-4.5.0.0-597748f6f53a7442bcae283373264bb6",InstalledPackageId "bytestring-0.9.2.1-df82064cddbf74693df4e042927e015e",InstalledPackageId "containers-0.4.2.1-7c54595400348f577b3b4a45691c5afd"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib/../doc/html/libraries/binary-0.5.1.0\\binary.haddock"], haddockHTMLs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib/../doc/html/libraries/binary-0.5.1.0"]}])]),(PackageName "bytestring",fromList [(Version {versionBranch = [0,9,2,1], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "bytestring-0.9.2.1-df82064cddbf74693df4e042927e015e", sourcePackageId = PackageIdentifier {pkgName = PackageName "bytestring", pkgVersion = Version {versionBranch = [0,9,2,1], versionTags = []}}, license = BSD3, copyright = "Copyright (c) Don Stewart   2005-2009,\n(c) Duncan Coutts 2006-2009,\n(c) David Roundy  2003-2005.", maintainer = "dons00@gmail.com, duncan@community.haskell.org", author = "Don Stewart, Duncan Coutts", stability = "", homepage = "http://www.cse.unsw.edu.au/~dons/fps.html", pkgUrl = "", synopsis = "Fast, packed, strict and lazy byte arrays with a list interface", description = "A time and space-efficient implementation of byte vectors using\npacked Word8 arrays, suitable for high performance use, both in terms\nof large data quantities, or high speed requirements. Byte vectors\nare encoded as strict 'Word8' arrays of bytes, and lazy lists of\nstrict chunks, held in a 'ForeignPtr', and can be passed between C\nand Haskell with little effort.\n\nTest coverage data for this library is available at:\n<http://code.haskell.org/~dons/tests/bytestring/hpc_index.html>", category = "Data", exposed = True, exposedModules = [ModuleName ["Data","ByteString"],ModuleName ["Data","ByteString","Char8"],ModuleName ["Data","ByteString","Unsafe"],ModuleName ["Data","ByteString","Internal"],ModuleName ["Data","ByteString","Lazy"],ModuleName ["Data","ByteString","Lazy","Char8"],ModuleName ["Data","ByteString","Lazy","Internal"],ModuleName ["Data","ByteString","Fusion"]], hiddenModules = [], trusted = False, importDirs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\bytestring-0.9.2.1"], libraryDirs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\bytestring-0.9.2.1"], hsLibraries = ["HSbytestring-0.9.2.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\bytestring-0.9.2.1\\include"], includes = ["fpstring.h"], depends = [InstalledPackageId "base-4.5.0.0-597748f6f53a7442bcae283373264bb6",InstalledPackageId "ghc-prim-0.2.0.0-060ce16c8998fd251a77ecf9e6561c86"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib/../doc/html/libraries/bytestring-0.9.2.1\\bytestring.haddock"], haddockHTMLs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib/../doc/html/libraries/bytestring-0.9.2.1"]}])]),(PackageName "containers",fromList [(Version {versionBranch = [0,4,2,1], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "containers-0.4.2.1-7c54595400348f577b3b4a45691c5afd", sourcePackageId = PackageIdentifier {pkgName = PackageName "containers", pkgVersion = Version {versionBranch = [0,4,2,1], versionTags = []}}, license = BSD3, copyright = "", maintainer = "fox@ucw.cz", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "Assorted concrete container types", description = "This package contains efficient general-purpose implementations\nof various basic immutable container types.  The declared cost of\neach operation is either worst-case or amortized, but remains\nvalid even if structures are shared.", category = "Data Structures", exposed = True, exposedModules = [ModuleName ["Data","Graph"],ModuleName ["Data","Sequence"],ModuleName ["Data","Tree"],ModuleName ["Data","IntMap"],ModuleName ["Data","IntSet"],ModuleName ["Data","Map"],ModuleName ["Data","Set"]], hiddenModules = [], trusted = False, importDirs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\containers-0.4.2.1"], libraryDirs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\containers-0.4.2.1"], hsLibraries = ["HScontainers-0.4.2.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "array-0.4.0.0-3cf1bc3f5cd0078adea24752c18081b9",InstalledPackageId "base-4.5.0.0-597748f6f53a7442bcae283373264bb6",InstalledPackageId "deepseq-1.3.0.0-6c19ec61ee16184ee322c1614ab60f0e"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib/../doc/html/libraries/containers-0.4.2.1\\containers.haddock"], haddockHTMLs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib/../doc/html/libraries/containers-0.4.2.1"]}])]),(PackageName "deepseq",fromList [(Version {versionBranch = [1,3,0,0], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "deepseq-1.3.0.0-6c19ec61ee16184ee322c1614ab60f0e", sourcePackageId = PackageIdentifier {pkgName = PackageName "deepseq", pkgVersion = Version {versionBranch = [1,3,0,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "Deep evaluation of data structures", description = "This package provides methods for fully evaluating data structures\n(\\\"deep evaluation\\\"). Deep evaluation is often used for adding\nstrictness to a program, e.g. in order to force pending exceptions,\nremove space leaks, or force lazy I/O to happen. It is also useful\nin parallel programs, to ensure pending work does not migrate to the\nwrong thread.\n\nThe primary use of this package is via the 'deepseq' function, a\n\\\"deep\\\" version of 'seq'. It is implemented on top of an 'NFData'\ntypeclass (\\\"Normal Form Data\\\", data structures with no unevaluated\ncomponents) which defines strategies for fully evaluating different\ndata types.\n", category = "Control", exposed = True, exposedModules = [ModuleName ["Control","DeepSeq"]], hiddenModules = [], trusted = False, importDirs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\deepseq-1.3.0.0"], libraryDirs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\deepseq-1.3.0.0"], hsLibraries = ["HSdeepseq-1.3.0.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "array-0.4.0.0-3cf1bc3f5cd0078adea24752c18081b9",InstalledPackageId "base-4.5.0.0-597748f6f53a7442bcae283373264bb6"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib/../doc/html/libraries/deepseq-1.3.0.0\\deepseq.haddock"], haddockHTMLs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib/../doc/html/libraries/deepseq-1.3.0.0"]}])]),(PackageName "directory",fromList [(Version {versionBranch = [1,1,0,2], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "directory-1.1.0.2-0270278088d4b2588b52cbec49af4cb7", sourcePackageId = PackageIdentifier {pkgName = PackageName "directory", pkgVersion = Version {versionBranch = [1,1,0,2], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "library for directory handling", description = "This package provides a library for handling directories.", category = "System", exposed = True, exposedModules = [ModuleName ["System","Directory"]], hiddenModules = [], trusted = False, importDirs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\directory-1.1.0.2"], libraryDirs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\directory-1.1.0.2"], hsLibraries = ["HSdirectory-1.1.0.2"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\directory-1.1.0.2\\include"], includes = ["HsDirectory.h"], depends = [InstalledPackageId "Win32-2.2.2.0-2a213fd84250935e110f763f480534bd",InstalledPackageId "base-4.5.0.0-597748f6f53a7442bcae283373264bb6",InstalledPackageId "filepath-1.3.0.0-a0928db5e84f98f74207b69b18d7b311",InstalledPackageId "old-time-1.1.0.0-7b2e123ada736534f8119498399ea8c8"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib/../doc/html/libraries/directory-1.1.0.2\\directory.haddock"], haddockHTMLs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib/../doc/html/libraries/directory-1.1.0.2"]}])]),(PackageName "extensible-exceptions",fromList [(Version {versionBranch = [0,1,1,4], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "extensible-exceptions-0.1.1.4-d27a1ac47e54880cae007cceceb41580", sourcePackageId = PackageIdentifier {pkgName = PackageName "extensible-exceptions", pkgVersion = Version {versionBranch = [0,1,1,4], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "Extensible exceptions", description = "This package provides extensible exceptions for both new and\nold versions of GHC (i.e., < 6.10).", category = "Control", exposed = True, exposedModules = [ModuleName ["Control","Exception","Extensible"]], hiddenModules = [], trusted = False, importDirs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\extensible-exceptions-0.1.1.4"], libraryDirs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\extensible-exceptions-0.1.1.4"], hsLibraries = ["HSextensible-exceptions-0.1.1.4"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-4.5.0.0-597748f6f53a7442bcae283373264bb6"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib/../doc/html/libraries/extensible-exceptions-0.1.1.4\\extensible-exceptions.haddock"], haddockHTMLs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib/../doc/html/libraries/extensible-exceptions-0.1.1.4"]}])]),(PackageName "filepath",fromList [(Version {versionBranch = [1,3,0,0], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "filepath-1.3.0.0-a0928db5e84f98f74207b69b18d7b311", sourcePackageId = PackageIdentifier {pkgName = PackageName "filepath", pkgVersion = Version {versionBranch = [1,3,0,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "", author = "Neil Mitchell", stability = "", homepage = "http://www-users.cs.york.ac.uk/~ndm/filepath/", pkgUrl = "", synopsis = "Library for manipulating FilePaths in a cross platform way.", description = "", category = "System", exposed = True, exposedModules = [ModuleName ["System","FilePath"],ModuleName ["System","FilePath","Posix"],ModuleName ["System","FilePath","Windows"]], hiddenModules = [], trusted = False, importDirs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\filepath-1.3.0.0"], libraryDirs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\filepath-1.3.0.0"], hsLibraries = ["HSfilepath-1.3.0.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-4.5.0.0-597748f6f53a7442bcae283373264bb6"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib/../doc/html/libraries/filepath-1.3.0.0\\filepath.haddock"], haddockHTMLs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib/../doc/html/libraries/filepath-1.3.0.0"]}])]),(PackageName "ghc-prim",fromList [(Version {versionBranch = [0,2,0,0], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "ghc-prim-0.2.0.0-060ce16c8998fd251a77ecf9e6561c86", sourcePackageId = PackageIdentifier {pkgName = PackageName "ghc-prim", pkgVersion = Version {versionBranch = [0,2,0,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "GHC primitives", description = "GHC primitives.", category = "", exposed = True, exposedModules = [ModuleName ["GHC","Prim"],ModuleName ["GHC","Classes"],ModuleName ["GHC","CString"],ModuleName ["GHC","Debug"],ModuleName ["GHC","Generics"],ModuleName ["GHC","Magic"],ModuleName ["GHC","PrimopWrappers"],ModuleName ["GHC","IntWord64"],ModuleName ["GHC","Tuple"],ModuleName ["GHC","Types"]], hiddenModules = [], trusted = False, importDirs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\ghc-prim-0.2.0.0"], libraryDirs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\ghc-prim-0.2.0.0"], hsLibraries = ["HSghc-prim-0.2.0.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "builtin_rts"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib/../doc/html/libraries/ghc-prim-0.2.0.0\\ghc-prim.haddock"], haddockHTMLs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib/../doc/html/libraries/ghc-prim-0.2.0.0"]}])]),(PackageName "integer-gmp",fromList [(Version {versionBranch = [0,4,0,0], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "integer-gmp-0.4.0.0-ec87c5d9609a1d46da031ef5d51c4f79", sourcePackageId = PackageIdentifier {pkgName = PackageName "integer-gmp", pkgVersion = Version {versionBranch = [0,4,0,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "Integer library based on GMP", description = "This package contains an Integer library based on GMP.", category = "", exposed = True, exposedModules = [ModuleName ["GHC","Integer"],ModuleName ["GHC","Integer","GMP","Internals"],ModuleName ["GHC","Integer","GMP","Prim"],ModuleName ["GHC","Integer","Logarithms"],ModuleName ["GHC","Integer","Logarithms","Internals"]], hiddenModules = [ModuleName ["GHC","Integer","Type"]], trusted = False, importDirs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\integer-gmp-0.4.0.0"], libraryDirs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\integer-gmp-0.4.0.0"], hsLibraries = ["HSinteger-gmp-0.4.0.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "ghc-prim-0.2.0.0-060ce16c8998fd251a77ecf9e6561c86"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib/../doc/html/libraries/integer-gmp-0.4.0.0\\integer-gmp.haddock"], haddockHTMLs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib/../doc/html/libraries/integer-gmp-0.4.0.0"]}])]),(PackageName "mtl",fromList [(Version {versionBranch = [2,1,1], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "mtl-2.1.1-87121149c5eb4fc03f06f5894ea4ac0c", sourcePackageId = PackageIdentifier {pkgName = PackageName "mtl", pkgVersion = Version {versionBranch = [2,1,1], versionTags = []}}, license = BSD3, copyright = "", maintainer = "Edward Kmett <ekmett@gmail.com>", author = "Andy Gill", stability = "", homepage = "", pkgUrl = "", synopsis = "Monad classes, using functional dependencies", description = "Monad classes using functional dependencies, with instances\nfor various monad transformers, inspired by the paper\n/Functional Programming with Overloading and Higher-Order Polymorphism/,\nby Mark P Jones, in /Advanced School of Functional Programming/, 1995\n(<http://web.cecs.pdx.edu/~mpj/pubs/springschool.html>).", category = "Control", exposed = True, exposedModules = [ModuleName ["Control","Monad","Cont"],ModuleName ["Control","Monad","Cont","Class"],ModuleName ["Control","Monad","Error"],ModuleName ["Control","Monad","Error","Class"],ModuleName ["Control","Monad","Identity"],ModuleName ["Control","Monad","List"],ModuleName ["Control","Monad","RWS"],ModuleName ["Control","Monad","RWS","Class"],ModuleName ["Control","Monad","RWS","Lazy"],ModuleName ["Control","Monad","RWS","Strict"],ModuleName ["Control","Monad","Reader"],ModuleName ["Control","Monad","Reader","Class"],ModuleName ["Control","Monad","State"],ModuleName ["Control","Monad","State","Class"],ModuleName ["Control","Monad","State","Lazy"],ModuleName ["Control","Monad","State","Strict"],ModuleName ["Control","Monad","Trans"],ModuleName ["Control","Monad","Writer"],ModuleName ["Control","Monad","Writer","Class"],ModuleName ["Control","Monad","Writer","Lazy"],ModuleName ["Control","Monad","Writer","Strict"]], hiddenModules = [], trusted = False, importDirs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\extralibs\\mtl-2.1.1\\ghc-7.4.1"], libraryDirs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\extralibs\\mtl-2.1.1\\ghc-7.4.1"], hsLibraries = ["HSmtl-2.1.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-4.5.0.0-597748f6f53a7442bcae283373264bb6",InstalledPackageId "transformers-0.3.0.0-e822211489f7414505ab945e95cef411"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\extralibs\\doc\\mtl-2.1.1\\html\\mtl.haddock"], haddockHTMLs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\extralibs\\doc\\mtl-2.1.1\\html"]}])]),(PackageName "old-locale",fromList [(Version {versionBranch = [1,0,0,4], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "old-locale-1.0.0.4-29bd50ed2bb4a20928338f52e4ab1b71", sourcePackageId = PackageIdentifier {pkgName = PackageName "old-locale", pkgVersion = Version {versionBranch = [1,0,0,4], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "locale library", description = "This package provides the old locale library.\nFor new code, the new locale library is recommended.", category = "System", exposed = True, exposedModules = [ModuleName ["System","Locale"]], hiddenModules = [], trusted = False, importDirs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\old-locale-1.0.0.4"], libraryDirs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\old-locale-1.0.0.4"], hsLibraries = ["HSold-locale-1.0.0.4"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-4.5.0.0-597748f6f53a7442bcae283373264bb6"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib/../doc/html/libraries/old-locale-1.0.0.4\\old-locale.haddock"], haddockHTMLs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib/../doc/html/libraries/old-locale-1.0.0.4"]}])]),(PackageName "old-time",fromList [(Version {versionBranch = [1,1,0,0], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "old-time-1.1.0.0-7b2e123ada736534f8119498399ea8c8", sourcePackageId = PackageIdentifier {pkgName = PackageName "old-time", pkgVersion = Version {versionBranch = [1,1,0,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "Time library", description = "This package provides the old time library.\nFor new code, the new time library is recommended.", category = "System", exposed = True, exposedModules = [ModuleName ["System","Time"]], hiddenModules = [], trusted = False, importDirs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\old-time-1.1.0.0"], libraryDirs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\old-time-1.1.0.0"], hsLibraries = ["HSold-time-1.1.0.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\old-time-1.1.0.0\\include"], includes = ["HsTime.h"], depends = [InstalledPackageId "base-4.5.0.0-597748f6f53a7442bcae283373264bb6",InstalledPackageId "old-locale-1.0.0.4-29bd50ed2bb4a20928338f52e4ab1b71"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib/../doc/html/libraries/old-time-1.1.0.0\\old-time.haddock"], haddockHTMLs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib/../doc/html/libraries/old-time-1.1.0.0"]}])]),(PackageName "rts",fromList [(Version {versionBranch = [1,0], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "builtin_rts", sourcePackageId = PackageIdentifier {pkgName = PackageName "rts", pkgVersion = Version {versionBranch = [1,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "glasgow-haskell-users@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "", description = "", category = "", exposed = True, exposedModules = [], hiddenModules = [], trusted = False, importDirs = [], libraryDirs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib"], hsLibraries = ["HSrts"], extraLibraries = ["m","wsock32"], extraGHCiLibraries = [], includeDirs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib/include"], includes = ["Stg.h"], depends = [], hugsOptions = [], ccOptions = [], ldOptions = ["-u","_ghczmprim_GHCziTypes_Izh_static_info","-u","_ghczmprim_GHCziTypes_Czh_static_info","-u","_ghczmprim_GHCziTypes_Fzh_static_info","-u","_ghczmprim_GHCziTypes_Dzh_static_info","-u","_base_GHCziPtr_Ptr_static_info","-u","_base_GHCziWord_Wzh_static_info","-u","_base_GHCziInt_I8zh_static_info","-u","_base_GHCziInt_I16zh_static_info","-u","_base_GHCziInt_I32zh_static_info","-u","_base_GHCziInt_I64zh_static_info","-u","_base_GHCziWord_W8zh_static_info","-u","_base_GHCziWord_W16zh_static_info","-u","_base_GHCziWord_W32zh_static_info","-u","_base_GHCziWord_W64zh_static_info","-u","_base_GHCziStable_StablePtr_static_info","-u","_ghczmprim_GHCziTypes_Izh_con_info","-u","_ghczmprim_GHCziTypes_Czh_con_info","-u","_ghczmprim_GHCziTypes_Fzh_con_info","-u","_ghczmprim_GHCziTypes_Dzh_con_info","-u","_base_GHCziPtr_Ptr_con_info","-u","_base_GHCziPtr_FunPtr_con_info","-u","_base_GHCziStable_StablePtr_con_info","-u","_ghczmprim_GHCziTypes_False_closure","-u","_ghczmprim_GHCziTypes_True_closure","-u","_base_GHCziPack_unpackCString_closure","-u","_base_GHCziIOziException_stackOverflow_closure","-u","_base_GHCziIOziException_heapOverflow_closure","-u","_base_ControlziExceptionziBase_nonTermination_closure","-u","_base_GHCziIOziException_blockedIndefinitelyOnMVar_closure","-u","_base_GHCziIOziException_blockedIndefinitelyOnSTM_closure","-u","_base_ControlziExceptionziBase_nestedAtomically_closure","-u","_base_GHCziWeak_runFinalizzerBatch_closure","-u","_base_GHCziTopHandler_flushStdHandles_closure","-u","_base_GHCziTopHandler_runIO_closure","-u","_base_GHCziTopHandler_runNonIO_closure","-u","_base_GHCziConcziIO_ensureIOManagerIsRunning_closure","-u","_base_GHCziConcziSync_runSparks_closure","-u","_base_GHCziConcziSignal_runHandlers_closure"], frameworkDirs = [], frameworks = [], haddockInterfaces = [], haddockHTMLs = []}])]),(PackageName "stm",fromList [(Version {versionBranch = [2,3], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "stm-2.3-2735f77d3e207163ae60f86094d82cd7", sourcePackageId = PackageIdentifier {pkgName = PackageName "stm", pkgVersion = Version {versionBranch = [2,3], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "Software Transactional Memory", description = "A modular composable concurrency abstraction.", category = "Concurrency", exposed = True, exposedModules = [ModuleName ["Control","Concurrent","STM"],ModuleName ["Control","Concurrent","STM","TArray"],ModuleName ["Control","Concurrent","STM","TVar"],ModuleName ["Control","Concurrent","STM","TChan"],ModuleName ["Control","Concurrent","STM","TMVar"],ModuleName ["Control","Monad","STM"]], hiddenModules = [ModuleName ["Control","Sequential","STM"]], trusted = False, importDirs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\extralibs\\stm-2.3\\ghc-7.4.1"], libraryDirs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\extralibs\\stm-2.3\\ghc-7.4.1"], hsLibraries = ["HSstm-2.3"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "array-0.4.0.0-3cf1bc3f5cd0078adea24752c18081b9",InstalledPackageId "base-4.5.0.0-597748f6f53a7442bcae283373264bb6"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\extralibs\\doc\\stm-2.3\\html\\stm.haddock"], haddockHTMLs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\extralibs\\doc\\stm-2.3\\html"]}])]),(PackageName "text",fromList [(Version {versionBranch = [0,11,2,0], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "text-0.11.2.0-b2986f5478f0efa626f8ba0494ed9670", sourcePackageId = PackageIdentifier {pkgName = PackageName "text", pkgVersion = Version {versionBranch = [0,11,2,0], versionTags = []}}, license = BSD3, copyright = "2009-2011 Bryan O'Sullivan, 2008-2009 Tom Harper", maintainer = "Bryan O'Sullivan <bos@serpentine.com>", author = "Bryan O'Sullivan <bos@serpentine.com>", stability = "", homepage = "https://github.com/bos/text", pkgUrl = "", synopsis = "An efficient packed Unicode text type.", description = "\nAn efficient packed, immutable Unicode text type (both strict and\nlazy), with a powerful loop fusion optimization framework.\n\nThe 'Text' type represents Unicode character strings, in a time and\nspace-efficient manner. This package provides text processing\ncapabilities that are optimized for performance critical use, both\nin terms of large data quantities and high speed.\n\nThe 'Text' type provides character-encoding, type-safe case\nconversion via whole-string case conversion functions. It also\nprovides a range of functions for converting 'Text' values to and from\n'ByteStrings', using several standard encodings.\n\nEfficient locale-sensitive support for text IO is also supported.\n\nThese modules are intended to be imported qualified, to avoid name\nclashes with Prelude functions, e.g.\n\n> import qualified Data.Text as T\n\nTo use an extended and very rich family of functions for working\nwith Unicode text (including normalization, regular expressions,\nnon-standard encodings, text breaking, and locales), see\nthe @text-icu@ package:\n<http://hackage.haskell.org/package/text-icu>\n\n&#8212;&#8212; RELEASE NOTES &#8212;&#8212;\n\nChanges in 0.11.2.0:\n\n* String literals are now converted directly from the format in\nwhich GHC stores them into 'Text', without an intermediate\ntransformation through 'String', and without inlining of\nconversion code at each site where a string literal is declared.\n", category = "Data, Text", exposed = True, exposedModules = [ModuleName ["Data","Text"],ModuleName ["Data","Text","Array"],ModuleName ["Data","Text","Encoding"],ModuleName ["Data","Text","Encoding","Error"],ModuleName ["Data","Text","Foreign"],ModuleName ["Data","Text","IO"],ModuleName ["Data","Text","Internal"],ModuleName ["Data","Text","Lazy"],ModuleName ["Data","Text","Lazy","Builder"],ModuleName ["Data","Text","Lazy","Builder","Int"],ModuleName ["Data","Text","Lazy","Builder","RealFloat"],ModuleName ["Data","Text","Lazy","Encoding"],ModuleName ["Data","Text","Lazy","IO"],ModuleName ["Data","Text","Lazy","Internal"],ModuleName ["Data","Text","Lazy","Read"],ModuleName ["Data","Text","Read"]], hiddenModules = [ModuleName ["Data","Text","Encoding","Fusion"],ModuleName ["Data","Text","Encoding","Fusion","Common"],ModuleName ["Data","Text","Encoding","Utf16"],ModuleName ["Data","Text","Encoding","Utf32"],ModuleName ["Data","Text","Encoding","Utf8"],ModuleName ["Data","Text","Fusion"],ModuleName ["Data","Text","Fusion","CaseMapping"],ModuleName ["Data","Text","Fusion","Common"],ModuleName ["Data","Text","Fusion","Internal"],ModuleName ["Data","Text","Fusion","Size"],ModuleName ["Data","Text","IO","Internal"],ModuleName ["Data","Text","Lazy","Builder","Functions"],ModuleName ["Data","Text","Lazy","Builder","RealFloat","Functions"],ModuleName ["Data","Text","Lazy","Encoding","Fusion"],ModuleName ["Data","Text","Lazy","Fusion"],ModuleName ["Data","Text","Lazy","Search"],ModuleName ["Data","Text","Private"],ModuleName ["Data","Text","Search"],ModuleName ["Data","Text","Unsafe"],ModuleName ["Data","Text","Unsafe","Base"],ModuleName ["Data","Text","UnsafeChar"],ModuleName ["Data","Text","UnsafeShift"],ModuleName ["Data","Text","Util"]], trusted = False, importDirs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\extralibs\\text-0.11.2.0\\ghc-7.4.1"], libraryDirs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\extralibs\\text-0.11.2.0\\ghc-7.4.1"], hsLibraries = ["HStext-0.11.2.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "array-0.4.0.0-3cf1bc3f5cd0078adea24752c18081b9",InstalledPackageId "base-4.5.0.0-597748f6f53a7442bcae283373264bb6",InstalledPackageId "bytestring-0.9.2.1-df82064cddbf74693df4e042927e015e",InstalledPackageId "deepseq-1.3.0.0-6c19ec61ee16184ee322c1614ab60f0e",InstalledPackageId "ghc-prim-0.2.0.0-060ce16c8998fd251a77ecf9e6561c86",InstalledPackageId "integer-gmp-0.4.0.0-ec87c5d9609a1d46da031ef5d51c4f79"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\extralibs\\doc\\text-0.11.2.0\\html\\text.haddock"], haddockHTMLs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\extralibs\\doc\\text-0.11.2.0\\html"]}])]),(PackageName "transformers",fromList [(Version {versionBranch = [0,3,0,0], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "transformers-0.3.0.0-e822211489f7414505ab945e95cef411", sourcePackageId = PackageIdentifier {pkgName = PackageName "transformers", pkgVersion = Version {versionBranch = [0,3,0,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "Ross Paterson <ross@soi.city.ac.uk>", author = "Andy Gill, Ross Paterson", stability = "", homepage = "", pkgUrl = "", synopsis = "Concrete functor and monad transformers", description = "A portable library of functor and monad transformers, inspired by\nthe paper \\\"Functional Programming with Overloading and Higher-Order\nPolymorphism\\\", by Mark P Jones,\nin /Advanced School of Functional Programming/, 1995\n(<http://web.cecs.pdx.edu/~mpj/pubs/springschool.html>).\n\nThis package contains:\n\n* the monad transformer class (in \"Control.Monad.Trans.Class\")\n\n* concrete functor and monad transformers, each with associated\noperations and functions to lift operations associated with other\ntransformers.\n\nIt can be used on its own in portable Haskell code, or with the monad\nclasses in the @mtl@ or @monads-tf@ packages, which automatically\nlift operations introduced by monad transformers through other\ntransformers.", category = "Control", exposed = True, exposedModules = [ModuleName ["Control","Applicative","Backwards"],ModuleName ["Control","Applicative","Lift"],ModuleName ["Control","Monad","IO","Class"],ModuleName ["Control","Monad","Trans","Class"],ModuleName ["Control","Monad","Trans","Cont"],ModuleName ["Control","Monad","Trans","Error"],ModuleName ["Control","Monad","Trans","Identity"],ModuleName ["Control","Monad","Trans","List"],ModuleName ["Control","Monad","Trans","Maybe"],ModuleName ["Control","Monad","Trans","Reader"],ModuleName ["Control","Monad","Trans","RWS"],ModuleName ["Control","Monad","Trans","RWS","Lazy"],ModuleName ["Control","Monad","Trans","RWS","Strict"],ModuleName ["Control","Monad","Trans","State"],ModuleName ["Control","Monad","Trans","State","Lazy"],ModuleName ["Control","Monad","Trans","State","Strict"],ModuleName ["Control","Monad","Trans","Writer"],ModuleName ["Control","Monad","Trans","Writer","Lazy"],ModuleName ["Control","Monad","Trans","Writer","Strict"],ModuleName ["Data","Functor","Compose"],ModuleName ["Data","Functor","Constant"],ModuleName ["Data","Functor","Identity"],ModuleName ["Data","Functor","Product"],ModuleName ["Data","Functor","Reverse"]], hiddenModules = [], trusted = False, importDirs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\extralibs\\transformers-0.3.0.0\\ghc-7.4.1"], libraryDirs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\extralibs\\transformers-0.3.0.0\\ghc-7.4.1"], hsLibraries = ["HStransformers-0.3.0.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-4.5.0.0-597748f6f53a7442bcae283373264bb6"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\extralibs\\doc\\transformers-0.3.0.0\\html\\transformers.haddock"], haddockHTMLs = ["C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\extralibs\\doc\\transformers-0.3.0.0\\html"]}])])]), pkgDescrFile = Just ".\\Workflow.cabal", localPkgDescr = PackageDescription {package = PackageIdentifier {pkgName = PackageName "Workflow", pkgVersion = Version {versionBranch = [0,7,0,0], versionTags = []}}, license = BSD3, licenseFile = "LICENSE", copyright = "", maintainer = "agocorona@gmail.com", author = "Alberto G\243mez Corona", stability = "experimental", testedWith = [], homepage = "", pkgUrl = "", bugReports = "agocorona@gmail.com", sourceRepos = [SourceRepo {repoKind = RepoHead, repoType = Just Git, repoLocation = Just "https://github.com/agocorona/Workflow", repoModule = Nothing, repoBranch = Nothing, repoTag = Nothing, repoSubdir = Nothing}], synopsis = "Monadic transformer for persistence in threads. and workflow patterns", description = "Transparent support  for interruptible computations. A workflow can be seen as a persistent thread that executes any\nmonadic computation. Therefore, it can be used in very time consuming computations such are CPU intensive calculations\nor procedures that are most of the time waiting for the action of a process or an user, that are prone to comunication\nfailures, timeouts or shutdowns. It also can be used if you like to restart your\nprogram at the point where the user left it last time.\n\nThe computation can be restarted at the interrupted point thanks to its logged state in permanent storage.\nBesides that, the package also provides other services associated to workflows\n\nThis release inprove the logging/recovery process in workflows with with many steps\n\nSee \"Control.Workflow\" for details", category = "Control, Workflow", customFieldsPD = [], buildDepends = [Dependency (PackageName "MonadCatchIO-mtl") (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [0,3,0,4], versionTags = []}))),Dependency (PackageName "RefSerialize") (IntersectVersionRanges (IntersectVersionRanges (UnionVersionRanges (ThisVersion (Version {versionBranch = [0,2,8], versionTags = []})) (LaterVersion (Version {versionBranch = [0,2,8], versionTags = []}))) (EarlierVersion (Version {versionBranch = [0,3], versionTags = []}))) (ThisVersion (Version {versionBranch = [0,2,8,1], versionTags = []}))),Dependency (PackageName "TCache") (IntersectVersionRanges (IntersectVersionRanges AnyVersion (EarlierVersion (Version {versionBranch = [1,0], versionTags = []}))) (ThisVersion (Version {versionBranch = [0,10,0,1], versionTags = []}))),Dependency (PackageName "base") (IntersectVersionRanges (IntersectVersionRanges (UnionVersionRanges (ThisVersion (Version {versionBranch = [4], versionTags = []})) (LaterVersion (Version {versionBranch = [4], versionTags = []}))) (EarlierVersion (Version {versionBranch = [5], versionTags = []}))) (ThisVersion (Version {versionBranch = [4,5,0,0], versionTags = []}))),Dependency (PackageName "binary") (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [0,5,1,0], versionTags = []}))),Dependency (PackageName "bytestring") (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [0,9,2,1], versionTags = []}))),Dependency (PackageName "containers") (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [0,4,2,1], versionTags = []}))),Dependency (PackageName "directory") (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [1,1,0,2], versionTags = []}))),Dependency (PackageName "extensible-exceptions") (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [0,1,1,4], versionTags = []}))),Dependency (PackageName "mtl") (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [2,1,1], versionTags = []}))),Dependency (PackageName "old-time") (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [1,1,0,0], versionTags = []}))),Dependency (PackageName "stm") (IntersectVersionRanges (LaterVersion (Version {versionBranch = [2], versionTags = []})) (ThisVersion (Version {versionBranch = [2,3], versionTags = []})))], specVersionRaw = Right (UnionVersionRanges (ThisVersion (Version {versionBranch = [1,6], versionTags = []})) (LaterVersion (Version {versionBranch = [1,6], versionTags = []}))), buildType = Just Simple, library = Just (Library {exposedModules = [ModuleName ["Control","Workflow"],ModuleName ["Control","Workflow","Configuration"],ModuleName ["Control","Workflow","Patterns"]], libExposed = True, libBuildInfo = BuildInfo {buildable = True, buildTools = [], cppOptions = [], ccOptions = [], ldOptions = [], pkgconfigDepends = [], frameworks = [], cSources = [], hsSourceDirs = ["."], otherModules = [ModuleName ["Control","Workflow","Stat"],ModuleName ["Control","Workflow","IDynamic"]], defaultLanguage = Nothing, otherLanguages = [], defaultExtensions = [], otherExtensions = [], oldExtensions = [EnableExtension OverlappingInstances,EnableExtension UndecidableInstances,EnableExtension MultiParamTypeClasses,EnableExtension ExistentialQuantification,EnableExtension TypeSynonymInstances,EnableExtension RecordWildCards,EnableExtension DeriveDataTypeable], extraLibs = [], extraLibDirs = [], includeDirs = [], includes = [], installIncludes = [], options = [], ghcProfOptions = [], ghcSharedOptions = [], customFieldsBI = [], targetBuildDepends = [Dependency (PackageName "MonadCatchIO-mtl") (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [0,3,0,4], versionTags = []}))),Dependency (PackageName "RefSerialize") (IntersectVersionRanges (IntersectVersionRanges (UnionVersionRanges (ThisVersion (Version {versionBranch = [0,2,8], versionTags = []})) (LaterVersion (Version {versionBranch = [0,2,8], versionTags = []}))) (EarlierVersion (Version {versionBranch = [0,3], versionTags = []}))) (ThisVersion (Version {versionBranch = [0,2,8,1], versionTags = []}))),Dependency (PackageName "TCache") (IntersectVersionRanges (IntersectVersionRanges AnyVersion (EarlierVersion (Version {versionBranch = [1,0], versionTags = []}))) (ThisVersion (Version {versionBranch = [0,10,0,1], versionTags = []}))),Dependency (PackageName "base") (IntersectVersionRanges (IntersectVersionRanges (UnionVersionRanges (ThisVersion (Version {versionBranch = [4], versionTags = []})) (LaterVersion (Version {versionBranch = [4], versionTags = []}))) (EarlierVersion (Version {versionBranch = [5], versionTags = []}))) (ThisVersion (Version {versionBranch = [4,5,0,0], versionTags = []}))),Dependency (PackageName "binary") (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [0,5,1,0], versionTags = []}))),Dependency (PackageName "bytestring") (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [0,9,2,1], versionTags = []}))),Dependency (PackageName "containers") (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [0,4,2,1], versionTags = []}))),Dependency (PackageName "directory") (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [1,1,0,2], versionTags = []}))),Dependency (PackageName "extensible-exceptions") (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [0,1,1,4], versionTags = []}))),Dependency (PackageName "mtl") (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [2,1,1], versionTags = []}))),Dependency (PackageName "old-time") (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [1,1,0,0], versionTags = []}))),Dependency (PackageName "stm") (IntersectVersionRanges (LaterVersion (Version {versionBranch = [2], versionTags = []})) (ThisVersion (Version {versionBranch = [2,3], versionTags = []})))]}}), executables = [], testSuites = [], benchmarks = [], dataFiles = [], dataDir = "", extraSrcFiles = ["Demos/Fact.hs","Demos/Inspect.hs","Demos/docAprobal.hs","Demos/pr.hs","Demos/sequence.hs"], extraTmpFiles = []}, withPrograms = [("alex",ConfiguredProgram {programId = "alex", programVersion = Just (Version {versionBranch = [3,0,1], versionTags = []}), programDefaultArgs = [], programOverrideArgs = [], programLocation = FoundOnSystem {locationPath = "C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\extralibs\\bin\\alex.exe"}}),("ar",ConfiguredProgram {programId = "ar", programVersion = Nothing, programDefaultArgs = [], programOverrideArgs = [], programLocation = FoundOnSystem {locationPath = "C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\mingw\\bin\\ar.exe"}}),("cpphs",ConfiguredProgram {programId = "cpphs", programVersion = Just (Version {versionBranch = [1,12], versionTags = []}), programDefaultArgs = [], programOverrideArgs = [], programLocation = FoundOnSystem {locationPath = "C:\\Program Files (x86)\\Haskell\\bin\\cpphs.exe"}}),("gcc",ConfiguredProgram {programId = "gcc", programVersion = Just (Version {versionBranch = [4,5,2], versionTags = []}), programDefaultArgs = ["-Wl,--hash-size=31","-Wl,--reduce-memory-overheads"], programOverrideArgs = [], programLocation = FoundOnSystem {locationPath = "C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\mingw\\bin\\gcc.exe"}}),("ghc",ConfiguredProgram {programId = "ghc", programVersion = Just (Version {versionBranch = [7,4,1], versionTags = []}), programDefaultArgs = [], programOverrideArgs = [], programLocation = FoundOnSystem {locationPath = "C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\bin\\ghc.exe"}}),("ghc-pkg",ConfiguredProgram {programId = "ghc-pkg", programVersion = Just (Version {versionBranch = [7,4,1], versionTags = []}), programDefaultArgs = [], programOverrideArgs = [], programLocation = FoundOnSystem {locationPath = "C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\bin\\ghc-pkg.exe"}}),("haddock",ConfiguredProgram {programId = "haddock", programVersion = Just (Version {versionBranch = [2,10,0], versionTags = []}), programDefaultArgs = [], programOverrideArgs = [], programLocation = FoundOnSystem {locationPath = "C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\bin\\haddock.exe"}}),("happy",ConfiguredProgram {programId = "happy", programVersion = Just (Version {versionBranch = [1,18,9], versionTags = []}), programDefaultArgs = [], programOverrideArgs = [], programLocation = FoundOnSystem {locationPath = "C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\lib\\extralibs\\bin\\happy.exe"}}),("hpc",ConfiguredProgram {programId = "hpc", programVersion = Just (Version {versionBranch = [0,6], versionTags = []}), programDefaultArgs = [], programOverrideArgs = [], programLocation = FoundOnSystem {locationPath = "C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\bin\\hpc.exe"}}),("hsc2hs",ConfiguredProgram {programId = "hsc2hs", programVersion = Just (Version {versionBranch = [0,67], versionTags = []}), programDefaultArgs = [], programOverrideArgs = [], programLocation = FoundOnSystem {locationPath = "C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\bin\\hsc2hs.exe"}}),("ld",ConfiguredProgram {programId = "ld", programVersion = Nothing, programDefaultArgs = ["-x","--hash-size=31","--reduce-memory-overheads"], programOverrideArgs = [], programLocation = FoundOnSystem {locationPath = "C:\\Program Files (x86)\\Haskell Platform\\2012.2.0.0\\mingw\\bin\\ld.exe"}}),("tar",ConfiguredProgram {programId = "tar", programVersion = Nothing, programDefaultArgs = [], programOverrideArgs = [], programLocation = FoundOnSystem {locationPath = "C:\\Program Files (x86)\\Git\\bin\\tar.exe"}})], withPackageDB = [GlobalPackageDB,UserPackageDB], withVanillaLib = True, withProfLib = False, withSharedLib = False, withDynExe = False, withProfExe = False, withOptimization = NormalOptimisation, withGHCiLib = True, splitObjs = False, stripExes = True, progPrefix = "", progSuffix = ""}